<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <style>
    <style-rule element='axis'>
      <format attr='stroke-color' value='#ffffff' />
      <format attr='line-visibility' value='off' />
    </style-rule>
    <style-rule element='gridline'>
      <format attr='line-visibility' value='off' />
    </style-rule>
    <style-rule element='trendline'>
      <format attr='stroke-size' value='1' />
      <format attr='stroke-color' value='#ffffff' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Filter Category' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Art&quot;'>
        <calculation class='tableau' formula='&quot;Art&quot;' />
        <members>
          <member value='&quot;Art&quot;' />
          <member value='&quot;Comics&quot;' />
          <member value='&quot;Crafts&quot;' />
          <member value='&quot;Dance&quot;' />
          <member value='&quot;Design&quot;' />
          <member value='&quot;Fashion&quot;' />
          <member value='&quot;Film &amp; Video&quot;' />
          <member value='&quot;Food&quot;' />
          <member value='&quot;Games&quot;' />
          <member value='&quot;Journalism&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Photography&quot;' />
          <member value='&quot;Publishing&quot;' />
          <member value='&quot;Technology&quot;' />
          <member value='&quot;Theater&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='kickstarter_projects' inline='true' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='kickstarter_projects' name='textscan.06hzu0x00a8flf145faw20of9503'>
            <connection class='textscan' directory='C:/Users/panig/OneDrive/Documents/Maven Analytics/Kickstarter Projects/Kickstarter+Projects' filename='kickstarter_projects.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06hzu0x00a8flf145faw20of9503' name='kickstarter_projects.csv' table='[kickstarter_projects#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='Category' ordinal='2' />
            <column datatype='string' name='Subcategory' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='datetime' name='Launched' ordinal='5' />
            <column datatype='date' name='Deadline' ordinal='6' />
            <column datatype='integer' name='Goal' ordinal='7' />
            <column datatype='integer' name='Pledged' ordinal='8' />
            <column datatype='integer' name='Backers' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06hzu0x00a8flf145faw20of9503' name='kickstarter_projects.csv' table='[kickstarter_projects#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='Category' ordinal='2' />
            <column datatype='string' name='Subcategory' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='datetime' name='Launched' ordinal='5' />
            <column datatype='date' name='Deadline' ordinal='6' />
            <column datatype='integer' name='Goal' ordinal='7' />
            <column datatype='integer' name='Pledged' ordinal='8' />
            <column datatype='integer' name='Backers' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subcategory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subcategory]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>Subcategory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Launched</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Launched]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>Launched</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deadline</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Deadline]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>Deadline</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Goal]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>Goal</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pledged</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pledged]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>Pledged</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Backers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Backers]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>Backers</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[kickstarter_projects.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='FixedCategory' datatype='integer' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Category]: [Calculation_189151237139087380]}' />
      </column>
      <column caption='Success percentage per Year' datatype='real' name='[Calculation_183803212988006408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([State])/SUM({FIXED(YEAR([Launched])):COUNT(ID)})' />
      </column>
      <column caption='Goal Completion' datatype='integer' name='[Calculation_183803213065572362]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Goal])-SUM([Pledged])' />
      </column>
      <column caption='count State' datatype='integer' name='[Calculation_189151237139087380]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([State])' />
      </column>
      <column caption='Success Percentage by catagory' datatype='real' name='[Calculation_189151237139804181 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([State])/SUM({FIXED[Category]:(COUNT([State]))})' />
      </column>
      <column caption='Success Percentage per Country' datatype='real' name='[Calculation_189151237139804181]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([State])/SUM({FIXED[Country]:(COUNT([State]))})' />
      </column>
      <column caption='percentage1' datatype='real' name='[Calculation_47569325028212736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([State])/SUM({FIXED[Country]:(COUNT([State]))})' />
      </column>
      <column caption='fixed' datatype='real' name='[Calculation_47569325030625281]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([State])/TOTAL(COUNT([State]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='filter calculation' datatype='boolean' name='[Calculation_47569325145374723]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]=[Category]' />
      </column>
      <column caption='deb_fixedcategory' datatype='integer' name='[Calculation_47569325167554568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED  [Category] : COUNT([__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C])}' />
      </column>
      <column caption='deb_percentage' datatype='real' name='[Calculation_47569325169188873]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100* [Calculation_189151237139087380]/sum([Calculation_47569325167554568])' />
      </column>
      <column caption='%Goal Success' datatype='real' name='[Calculation_944630076257931267]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Goal])-AVG([Pledged]))/100' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Deadline]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Goal]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='datetime' name='[Launched]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Pledged]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='string' name='[State]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='string' name='[Subcategory]' role='dimension' type='nominal' />
      <column caption='Success Percentage by subcatagory' datatype='real' name='[Success Percentage by catagory (copy)_944630076170043392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([State])/SUM({FIXED[Category]:(COUNT([State]))})' />
      </column>
      <column caption='Success Percentage by subcatagory _1' datatype='real' name='[Success Percentage by subcatagory (copy)_944630076179025921]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([State])/SUM({FIXED[Subcategory]:(COUNT([State]))})' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='kickstarter_projects.csv' datatype='table' name='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[__tableau_internal_object_id__].[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[__tableau_internal_object_id__].[pcva:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[Category]' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[State]' derivation='Attribute' name='[attr:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Goal]' derivation='Avg' name='[avg:Goal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pledged]' derivation='Avg' name='[avg:Pledged:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category]' derivation='Count' name='[cnt:Category:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='Count' name='[cnt:Country:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ID]' derivation='Count' name='[cnt:ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State]' derivation='Count' name='[cnt:State:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category]' derivation='CountD' name='[ctd:Category:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='CountD' name='[ctd:Country:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ID]' derivation='CountD' name='[ctd:ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[Category]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='PaneCol' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[State]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Subcategory]' derivation='None' name='[none:Subcategory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Goal]' derivation='Sum' name='[pcrk:sum:Goal:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Launched]' derivation='Quarter' name='[qr:Launched:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_183803212988006408]' derivation='Sum' name='[sum:Calculation_183803212988006408:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Goal]' derivation='Sum' name='[sum:Goal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pledged]' derivation='Sum' name='[sum:Pledged:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_183803212988006408]' derivation='User' name='[usr:Calculation_183803212988006408:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_189151237139087380]' derivation='User' name='[usr:Calculation_189151237139087380:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Success Percentage by subcatagory (copy)_944630076179025921]' derivation='User' name='[usr:Success Percentage by subcatagory (copy)_944630076179025921:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deadline]' derivation='Year' name='[yr:Deadline:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Launched]' derivation='Year' name='[yr:Launched:ok]' pivot='key' type='ordinal' />
      <group caption='Action (YEAR(Deadline),State)' hidden='true' name='[Action (YEAR(Deadline),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Deadline:ok]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State,YEAR(Deadline))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State:nk]' />
          <groupfilter function='level-members' level='[yr:Deadline:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category, Subcategory'>
          <field>[Category]</field>
          <field>[Subcategory]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.959302' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0406977' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[ctd:ID:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[pcrk:sum:Goal:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_183803212988006408:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:ID:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139087380:qk]&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[avg:Goal:qk]&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Goal:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:State:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:Category:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:Country:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[ctd:Category:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[ctd:Country:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_183803212969963526:qk]&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[avg:Pledged:qk]&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Pledged:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[__tableau_internal_object_id__].[cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[__tableau_internal_object_id__].[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[__tableau_internal_object_id__].[pcva:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:10]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:2]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:4]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:6]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:7]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:8]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[diff:cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk:9]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation7:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Calculation_183803212988006408:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Success Percentage by subcatagory (copy)_944630076179025921:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Subcategory:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Ceramics&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;DIY Electronics&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kids&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Performance Art&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Quilts&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Zines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;3D Printing&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Childrenswear&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Drama&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Footwear&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Latin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Periodicals&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Radio &amp; Podcasts&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Textiles&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Animals&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Comedy&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Events&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Glass&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Live Games&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Photography&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Robots&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Typography&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Blues&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Dance&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Fiction&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Interactive Design&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Nature&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Public Art&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Spaces&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Woodworking&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Country &amp; Folk&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Farmer&apos;s Markets&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Illustration&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Pottery&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Small Batch&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Weaving&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Apps&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Conceptual Art&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Family&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Hip-Hop&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Mobile Games&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Poetry&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sculpture&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Video Games&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Animation&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Comic Books&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Experimental&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Graphic Design&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Makerspaces&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Places&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Vegan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Children&apos;s Books&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Documentary&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Food Trucks&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Knitting&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Performances&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;R&amp;B&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Television&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Academic&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Chiptune&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Drinks&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Gadgets&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Letterpress&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Pet Fashion&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Ready-to-wear&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Theater&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Camera Equipment&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Digital Art&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Fine Art&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jewelry&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Painting&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Punk&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tabletop Games&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;World Music&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Art Books&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Couture&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Farms&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Immersive&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Music Videos&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Print&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Software&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Web&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Architecture&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cookbooks&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Fantasy&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Horror&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Movie Theaters&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Pop&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Shorts&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Wearables&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Calendars&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Design&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Film &amp; Video&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Jazz&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nonfiction&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Publishing&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Stationery&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Workshops&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Anthologies&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Comics&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Fabrication Tools&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Graphic Novels&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Metal&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Playing Cards&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Romance&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Video&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Candles&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;DIY&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Flight&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Journalism&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;People&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Puzzles&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Taxidermy&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Young Adult&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Audio&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Crafts&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Fashion&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Indie Rock&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Musical&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Printing&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Sound&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Webcomics&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Crochet&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Festivals&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Installations&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Narrative Film&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Product Design&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Space Exploration&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Webseries&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Civic Design&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Electronic Music&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Games&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Literary Journals&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Photo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Residencies&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Thrillers&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Apparel&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Community Gardens&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Faith&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hardware&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Mixed Media&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Plays&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Science Fiction&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Video Art&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Action&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Classical Music&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Embroidery&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Gaming Hardware&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Literary Spaces&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Photobooks&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Restaurants&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Translations&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Canceled&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Live&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>%all%</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Suspended&quot;</bucket>
            </map>
            <map to='#a27099'>
              <bucket>&quot;Successful&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Failed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:State:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Canceled&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Live&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Suspended&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Successful&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Failed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Launched:ok]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#17becf'>
              <bucket>2018</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>2009</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>2017</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>2016</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>2012</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>2011</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>2013</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>2015</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>2014</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;Dance&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;Games&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Publishing&quot;</bucket>
            </map>
            <map to='#a27099'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#a27099'>
              <bucket>&quot;Theater&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Crafts&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Fashion&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Photography&quot;</bucket>
            </map>
            <map to='#ca96b8'>
              <bucket>&quot;Design&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
            <map to='#eac1df'>
              <bucket>&quot;Comics&quot;</bucket>
            </map>
            <map to='#eac1df'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Film &amp; Video&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Journalism&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:Launched:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>2018</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>2009</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2011</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>2016</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2014</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2013</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>2017</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2012</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2015</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Filter Category' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Art&quot;'>
          <calculation class='tableau' formula='&quot;Art&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='kickstarter_projects.csv' id='kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C'>
            <properties context=''>
              <relation connection='textscan.06hzu0x00a8flf145faw20of9503' name='kickstarter_projects.csv' table='[kickstarter_projects#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ID' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                  <column datatype='string' name='Subcategory' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='datetime' name='Launched' ordinal='5' />
                  <column datatype='date' name='Deadline' ordinal='6' />
                  <column datatype='integer' name='Goal' ordinal='7' />
                  <column datatype='integer' name='Pledged' ordinal='8' />
                  <column datatype='integer' name='Backers' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_AF59B4D6E046497AB5F5CE2D99FE9FFF]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Success Rate of top 5 Countries' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country' />
        <param name='target' value='Success Rate of top 5 Countries' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Category with heighest no of Avg Backers'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column datatype='integer' name='[Backers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Launched]' role='dimension' type='ordinal' />
            <column-instance column='[Backers]' derivation='Avg' name='[avg:Backers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Launched]' derivation='Year-Trunc' name='[tyr:Launched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Launched]' derivation='Year' name='[yr:Launched:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Backers])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Games&quot;</bucket>
              <bucket>&quot;Technology&quot;</bucket>
              <bucket>&quot;Design&quot;</bucket>
              <bucket>&quot;Comics&quot;</bucket>
              <bucket>&quot;Film &amp; Video&quot;</bucket>
              <bucket>&quot;Food&quot;</bucket>
              <bucket>&quot;Fashion&quot;</bucket>
              <bucket>&quot;Journalism&quot;</bucket>
              <bucket>&quot;Music&quot;</bucket>
              <bucket>&quot;Theater&quot;</bucket>
              <bucket>&quot;Publishing&quot;</bucket>
              <bucket>&quot;Dance&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Photography&quot;</bucket>
              <bucket>&quot;Crafts&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]'>
            <groupfilter from='2011' function='range' level='[yr:Launched:ok]' to='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]</column>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[avg:Backers:qk]' value='n#,##0;-#,##0' />
            <format attr='text-align' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' value='center' />
            <format attr='vertical-align' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' value='top' />
            <format attr='wrap' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' value='auto' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#f0eae8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' />
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[avg:Backers:qk]</rows>
        <cols>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[tyr:Launched:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='false' fill-type='fill-missing' ignore-last='0' model-type='custom' range-periods='Year-Trunc' range-size='2' range-type='next' season-type='ets-none' show-prediction-bands='true' trend-type='ets-none' />
      </table>
      <simple-id uuid='{D3610658-88AA-4A57-A9AA-9D6254A43D49}' />
    </worksheet>
    <worksheet name='Max Backers'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column datatype='integer' name='[Backers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Backers]' derivation='Max' name='[max:Backers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Backers])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='212' />
            <format attr='height' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Name:nk]' value='109' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Name:nk]' value='240' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[max:Backers:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk] / [federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{950418B4-D54F-49AD-A178-C06183068E7F}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column datatype='integer' name='[Backers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Goal]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Pledged]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='kickstarter_projects.csv' datatype='integer' name='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='kickstarter_projects.csv' datatype='table' name='[__tableau_internal_object_id__].[kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='Count' name='[cnt:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='CountD' name='[ctd:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='CountD' name='[ctd:Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Backers]' derivation='Sum' name='[sum:Backers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goal]' derivation='Sum' name='[sum:Goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pledged]' derivation='Sum' name='[sum:Pledged:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Backers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:Category:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[ctd:Category:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[ctd:Country:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Goal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Pledged:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Backers:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[ctd:Country:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[__tableau_internal_object_id__].[cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Goal:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Pledged:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Pledged:qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[__tableau_internal_object_id__].[cnt:kickstarter_projects.csv_9210988EABCE47AFA2D82D039D098F8C:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Goal:qk]' value='c&quot;$&quot;#,##0,,,B;(&quot;$&quot;#,##0,,,B)' />
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Backers:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E359B8FD-88EA-44C1-BA4B-B39E50BA280F}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{57E60659-D717-4B03-BB83-41E84A32DB97}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Launched]' role='dimension' type='ordinal' />
            <column aggregation='CountD' datatype='string' name='[State]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[State]' derivation='Count' name='[cnt:State:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Launched]' derivation='Year' name='[yr:Launched:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Launched:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Launched:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Launched:ok]' member='2015' />
              <groupfilter function='member' level='[yr:Launched:ok]' member='2016' />
              <groupfilter function='member' level='[yr:Launched:ok]' member='2017' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]' value='133' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:State:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk] / [federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk])</rows>
        <cols>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]</cols>
      </table>
      <simple-id uuid='{60218CC0-E95F-44A4-93C0-83F4A19BB417}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column aggregation='CountD' datatype='string' name='[State]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Subcategory]' role='dimension' type='nominal' />
            <column caption='Success Percentage by subcatagory _1' datatype='real' name='[Success Percentage by subcatagory (copy)_944630076179025921]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([State])/SUM({FIXED[Subcategory]:(COUNT([State]))})' />
            </column>
            <column-instance column='[State]' derivation='Count' name='[cnt:State:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subcategory]' derivation='None' name='[none:Subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Success Percentage by subcatagory (copy)_944630076179025921]' derivation='User' name='[usr:Success Percentage by subcatagory (copy)_944630076179025921:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:State:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Success Percentage by subcatagory (copy)_944630076179025921:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Failed&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Successful&quot;' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]' direction='DESC' />
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</column>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]' value='111' />
            <format attr='width' value='186' />
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Success Percentage by subcatagory (copy)_944630076179025921:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Subcategory:nk] / [federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk])</rows>
        <cols>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{0AF33B05-37FE-4333-AEDF-60DB5A1A0FEB}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column caption='Goal Completion' datatype='integer' name='[Calculation_183803213065572362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Goal])-SUM([Pledged])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Goal]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Pledged]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Goal]' derivation='Sum' name='[sum:Goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pledged]' derivation='Sum' name='[sum:Pledged:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_183803213065572362]' derivation='User' name='[usr:Calculation_183803213065572362:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Goal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Pledged:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_183803213065572362:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Goal:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Pledged:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_183803213065572362:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_183803213065572362:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</rows>
        <cols>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{899CE795-F6FF-4FC1-91F2-2C80F8C3DAC2}' />
    </worksheet>
    <worksheet name='Success Rate of top 5 Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column caption='Success Percentage per Country' datatype='real' name='[Calculation_189151237139804181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([State])/SUM({FIXED[Country]:(COUNT([State]))})' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[State]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_189151237139804181]' derivation='User' name='[usr:Calculation_189151237139804181:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Successful&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Country:nk]</column>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181:qk]' num-steps='5' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181:qk]' />
              <color column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181:qk]' />
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Country:nk]' />
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{33621CED-5A53-4BF3-9497-CA50C8AC8CD4}' />
    </worksheet>
    <worksheet name='Success rate by Catagory'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column caption='Success Percentage by catagory' datatype='real' name='[Calculation_189151237139804181 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([State])/SUM({FIXED[Category]:(COUNT([State]))})' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[State]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[State]' derivation='Count' name='[cnt:State:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_189151237139804181 1]' derivation='User' name='[usr:Calculation_189151237139804181 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Comics&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Dance&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Music&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Theater&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' direction='ASC' using='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181 1:qk]' />
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Successful&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</column>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181 1:qk]' value='p0.00%' />
            <format attr='text-align' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181 1:qk]' value='center' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181 1:qk]' palette='purple_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181 1:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' />
              <lod column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:State:qk]' />
              <lod column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</rows>
        <cols>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181 1:qk]</cols>
      </table>
      <simple-id uuid='{16F9C0CA-29B0-47E3-8FE5-5BCA54BA86C6}' />
    </worksheet>
    <worksheet name='Top 5 Category with highest pledge'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Pledged]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[Pledged]' derivation='Avg' name='[avg:Pledged:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Pledged])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Successful&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</column>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[avg:Pledged:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='width' value='702' />
            <format attr='height' value='450' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Pie' />
            <encodings>
              <size column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[avg:Pledged:qk]' />
              <color column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' />
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{01E66B99-F285-4DB8-8FC2-737106F4DF1E}' />
    </worksheet>
    <worksheet name='Yearwise Pledge'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column datatype='datetime' name='[Launched]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Pledged]' role='measure' type='quantitative' />
            <column-instance column='[Pledged]' derivation='Sum' name='[sum:Pledged:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Launched]' derivation='Year-Trunc' name='[tyr:Launched:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Launched]' derivation='Year' name='[yr:Launched:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]'>
            <groupfilter from='2011' function='range' level='[yr:Launched:ok]' to='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]' />
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Pledged:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[tyr:Launched:ok]</rows>
        <cols>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[sum:Pledged:qk]</cols>
      </table>
      <simple-id uuid='{96355709-EC24-49A1-B212-E1A3A166173B}' />
    </worksheet>
    <worksheet name='success and failure by year wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='kickstarter_projects' name='federated.0vj6kfp0v8r7rb1701rat1ldipy1' />
          </datasources>
          <datasource-dependencies datasource='federated.0vj6kfp0v8r7rb1701rat1ldipy1'>
            <column caption='Success percentage per Year' datatype='real' name='[Calculation_183803212988006408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([State])/SUM({FIXED(YEAR([Launched])):COUNT(ID)})' />
            </column>
            <column datatype='date' name='[Deadline]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column datatype='datetime' name='[Launched]' role='dimension' type='ordinal' />
            <column aggregation='CountD' datatype='string' name='[State]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[State]' derivation='Count' name='[cnt:State:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_183803212988006408]' derivation='User' name='[usr:Calculation_183803212988006408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deadline]' derivation='Year' name='[yr:Deadline:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Failed&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Successful&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Deadline:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Deadline:ok]' member='2011' />
              <groupfilter function='member' level='[yr:Deadline:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Deadline:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Deadline:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Deadline:ok]' member='2015' />
              <groupfilter function='member' level='[yr:Deadline:ok]' member='2016' />
              <groupfilter function='member' level='[yr:Deadline:ok]' member='2017' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</column>
            <column>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Deadline:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Deadline:ok]' value='31' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Deadline:ok]' value='70' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_183803212988006408:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_183803212988006408:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:State:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]' />
              <text column='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_183803212988006408:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Project Status&#9;</run>
                <run bold='true'><![CDATA[<[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Number of <[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:State:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]> percentage per Year:	]]></run>
                <run bold='true'><![CDATA[<[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_183803212988006408:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[cnt:State:qk]</rows>
        <cols>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Deadline:ok]</cols>
      </table>
      <simple-id uuid='{1FED4062-8C1B-4B77-B324-A5D3FCFEA203}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='empty' _.fcp.SetMembershipControl.true...type-v2='empty' h='4000' id='3' w='34100' x='65100' y='95000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49000' id='10' param='horz' w='49200' x='800' y='1000' />
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='24500' id='12' param='horz' w='49200' x='50000' y='1000' />
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49000' id='13' param='horz' w='30200' x='800' y='50000'>
            <zone h='49000' id='16' name='Success Rate of top 5 Countries' w='30200' x='800' y='50000'>
              <layout-cache cell-count-w='1' non-cell-size-w='1' type-h='cell' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49000' id='14' param='horz' w='34100' x='31000' y='50000'>
            <zone h='49000' id='24' name='success and failure by year wise' w='34100' x='31000' y='50000'>
              <layout-cache cell-count-w='7' minheight='180' non-cell-size-w='52' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='24500' id='17' param='horz' w='49200' x='50000' y='25500'>
            <zone h='24500' id='18' name='Success rate by Catagory' w='49200' x='50000' y='25500'>
              <layout-cache minwidth='182' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='45000' id='27' name='Category with heighest no of Avg Backers' w='34100' x='65100' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='29' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='28' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='188' h='24500' id='18' is-fixed='true' name='Success rate by Catagory' w='49200' x='50000' y='25500'>
                  <layout-cache minwidth='182' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='16' is-fixed='true' name='Success Rate of top 5 Countries' w='30200' x='800' y='50000'>
                  <layout-cache cell-count-w='1' non-cell-size-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='24' is-fixed='true' name='success and failure by year wise' w='34100' x='31000' y='50000'>
                  <layout-cache cell-count-w='7' minheight='180' non-cell-size-w='52' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45000' id='27' is-fixed='true' name='Category with heighest no of Avg Backers' w='34100' x='65100' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B04E0BE9-6F35-4788-9F45-B564D45C0944}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Success Rate of top 5 Countries'>
      <cards>
        <edge name='left'>
          <strip size='285'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DD9FAB2C-FB26-4A32-9FD2-134F954441C7}' />
    </window>
    <window class='worksheet' name='Success rate by Catagory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card AVG='false' KURTOSIS='false' MAX='true' MEDIAN='false' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='false' type='summary' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Calculation_47569325145374723:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:ID:ok]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Subcategory:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[usr:Calculation_189151237139804181 1:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6C425CC-E469-4997-B129-6F4824A55725}' />
    </window>
    <window class='worksheet' name='success and failure by year wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:ID:ok]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Deadline:ok]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3637B1C-52EF-4760-825F-B9AAC2D51DDE}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{749603B8-A9D5-4187-8B19-536989718D64}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Subcategory:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{199EA35A-8331-4893-9418-5E0740A5B800}' />
    </window>
    <window class='worksheet' name='Max Backers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{06DC9F9F-7B03-4D37-916D-6E9187BBD091}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Subcategory:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9D49E1B0-4192-4D78-9DD4-E3F7537F64FB}' />
    </window>
    <window class='worksheet' name='Yearwise Pledge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C350EA3-4973-401D-A11A-CB6A2B3199B6}' />
    </window>
    <window class='worksheet' maximized='true' name='Category with heighest no of Avg Backers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[:Measure Names]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Forecast Indicator:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[yr:Launched:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7768FBF-F26C-4BDD-903C-9FA8414F0911}' />
    </window>
    <window class='worksheet' name='Top 5 Category with highest pledge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[avg:Pledged:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{502B7D11-7773-4EAF-9134-F413DD4FC295}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Category:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:Country:nk]</field>
            <field>[federated.0vj6kfp0v8r7rb1701rat1ldipy1].[none:ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F89C9C44-F738-4A20-98AB-ADF15979395D}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{60C385A4-8E8D-4858-89EB-C92ED621C961}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Category with heighest no of Avg Backers'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Success Rate of top 5 Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Success rate by Catagory'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='success and failure by year wise'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='27' />
      <simple-id uuid='{36D6CB8C-2DC8-449A-8D74-ED9CA8493BF0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Category with heighest no of Avg Backers' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2d2ZNb133nP+cuAC72BtB7t0hKFClZkiXFlOQ1iZOJM5lkslcyMzVTeZl5
      mYdM1fwF/h/yNDNVmYdJVSoee+LElizbsuVYkm0t1EJJbO7svcneADT2u5wzD+gGu8Vmk80G
      Lpa+nyqy0bcvcH8Azvcsv/s7v59QSikCAo4pWrcNCAjoJsbOg42NDaSUrT9cvXyNx8+e5srM
      ZdLJMEsFh5GopOhF+NzpE1QqFSKRCLqud8XwgIB20BJANpttHbTLm7z57ic8+9RJXnv9XZ4+
      dwpNacwVNQSC4S+dwzAM4vE4pml2xfCAgHaw7xQoFM9wanKYy5euIN0KtZpDw3bBc3CkpFKp
      UCgU/LY1IKDtiHstgvP5AumhNMV8gbAJmxWPVFhR8UxGsyny+XwwAgT0PfcUwP0IBBAwCARe
      oIBjTSCAgGNNIICAY41x/1MC7oVSClTzp1IKKSVKKpRsPpZS4rle85/j4TouruPiOR7S8/Bc
      iee5hCJhTj51EiFEt9/SseNYCqBWrlEpVrYbo4vnNRuqdD1c12se22640pOtv3uu22rIzeNe
      s7F78s6/7Yav5N2+BSEEiObP3Y1dKUVqOEVmNOPnxxDAMRSAUoqff+dfKOfLCE3c1RjbgaZp
      h5pcCiG49KsZvvSHXw5GAZ85dmuA4lqRcqGMbuhomtYzDe72/G02Vja6bcax49gJYPbibM/G
      L8388mK3TTh27DsFkk6df375dV56/jHe+egapyZzLBUdxmKSomfxm18+57edbUF6kuVrS902
      Y1+EEKwvr7O6sMrI9Ei3zTk27DsCSM9js1hi7MRpapvLXJhboFHfZO52idLaKo7j0Gg0/Lb1
      yKwurFKv1Lttxj0RQjDzq4sEWzT8Y18BGJEY2XScpRtX8HSLmKFTqnjERIOa0Fouv35jfmYO
      Te/tWd/myiarc7e7bcax4djEAjkNhx/87StIr/eFm8ql+M2//HrPLNAHmd7uDtvIyo1lPMfr
      thkPRH41z8rNlW6bcSw4NgKYm5lHaP3Ro2qaxsyvLvblNLPfOBYCqJaqbCyvd9uMQ7G1vtWz
      HqtB4lgIYPHKYt95VoQmuPTOpb5Ys/QzAy8ApRQLl+f7ckFZ2iyxcGWh22YMNAMvgK2NLbY2
      trptxkMhNMHldy/huf2xeO9HBl4A85fmu23CkagUKn3/HnqZgRaAlJLFKwt9Of3ZYWcUcB23
      26YMJAMtgPWldWrlWrfNODK1co3ZT2e7bcZAsm8wnFPJ8zf/69v8+R98hR+/8StGc1k2ah5j
      EUVBRfnLP/o9v+18KBYu9efi97MIIbhy/jInP3cSI3TstnB0lP1jgawkUxPDjE89QioxhC0U
      6bhJXVhEUX2RGMtzPZauLQ2EAAAa1QY3Pr7RbTMGjn0FIDSdR6Yn+fDtNzHjaR4dGyNsZTkx
      kiAxMkosFiOdTvtt66FYvrE8UN6TnVHAtYO1QDu553j6xS+94KcdbUUpNTDTn904DYdrH17l
      iRef7LYpA8NALoKdhsPt2cELKRZCcPX9qzi2021TBoaBFMD8pXkYrM6/hed6XHnvcrfNGBgG
      TgBKqb73/d+P6xeu06j23468XmTgBFApVti8tdltMzqK53hcOR+MAu1g4AQwPzM30L0/NNcC
      Nz+5ORA3+brNQAlASsni1cWBFwAEa4F2MVACyN/OU86Xu22GLwghmL04S3Wr0m1T+pqBEkA/
      ZH1oJ9KTXHr3UrfN6Gvu2VqK+SIKKBbz1Ep5FlbWKOVXWVnvzRAI13FZvr7c0WvMzV/i/U/f
      ZaFHPgMhBPMz85QLx2PU6wT73gm2yxv8zf/8e/76P/8pf/t3/8TZR8cpuZIIAheDP/uTf+u3
      nfdldWGVRq3RTEzbIVY28pyaGCW/dYvvvvsyqfQwxWodXUAymWV5/TajyRjRoUf44pP+3K1V
      SnHpnRnOfaN/79x3k3tUicxy9tQUiewEp8azeJogZOqgmRia1pPBcPMz8x1t/ACZRJSVzU2K
      hXX0UAyB4PTUFBPD42hGmOHMCOMj49Sq/u1AE0KweGWRrc3+3PXWbe4ZC3Tu3PMAPH/uHLGI
      xmLeZTjqUfSsnguGa9QavmRTO3P62Qc6z+9IHaUUl96e4cXfe8nnK/c/9xTAqUdPAHDi0UcB
      yE00j0923qZDs3x9Gc/zjoX7cz+EECxdXaL4QpFULtVtc/qKvneZDGrk56ERcDFIrHto+l4A
      1VI1KCxBcxRYubFMYbW31ma9Tt8LYOFSkDdnB03TuPirT4NR4BD0vwD6NOlVp1idWw1GxEPQ
      1wIorBYobZa6bUZPIbSgyMZh6GsBzM3M9U3GZz9ZX1xnbXGt22b0BX0rACklS8ck8vOwBKPA
      g9O3AlhbWKNe7d16X91mc2WT20Gppfuy740wpRQffXCBk5MZ3r+6wtmJFPN5h9G4pOhGeP6p
      M37beRdzM3MdD33oZ4QmuPiri4yeGA1GyQO4Z2a4n771Ps+ezSIVvP7BEnHLYHVJQ0N0XQCO
      7XArKCF0X4prBZavLzN5uhfv3/cG9wiGyzA9OoRlGqysl7E0RancQDg1qo7b9WC4lev9U++r
      mwghmHn7IkoGa4F7cc9YoH/z+9/AChuc2aqSioUoNySWobClQSxmdS0YTinF/KX+qffVbUqb
      JRavLjJ9drrbpvQk9xRALBYFIJcJATAUbh6PdN6mA6lX6qwv9Ve9r26yMwpMnZkK1gL70Her
      yMUrC4F775BUihXmZ+a6bUZP0lcCaNb7GuykV51AiKDg3r3oKwFsbWxRXCt224y+pLpVZfbi
      bLfN6Dn6SgALA5zzs9MITXDlvctBqaXP0DcCOE5JrzpFUGrpbvpGABvLG1RLQSrAoyCE4Or5
      K0F69V30jQDmL80ziJ2/UsrXSjb1ap2bF4JSSzv0hQA812N5QOp9KaVQStGo1HGrNoYSRENh
      3IY/vbIQgqsfXMVp2L5cr1eRUrJ0beneN8IALp5/i0vLJSYzUW6VPcajkoK0+MZvfNkvOwFY
      ubGCa7t9ffdXehK7ZmMaOpFwmOzECGbIbP1drSvqro2m6x23xa7bXPvwOk++dPxKLdXKNW5+
      cpPZT27SqDYOFkCjXmd99gaz+SSP5pIs5w002aBer1Mul4nH474YPX+5P70/ruPi2S4hwyAa
      tRgZzqBp2r4jWTqb4tbSKkpTHR/phBBc+/Aqjz37GKFIqKPX6gWUVKwurHLz4xusbAdRCiEQ
      mjhYAGNT08Tm1jg9mmGt7DJmKQrSwjRNIhF/giLsus3t2Vt9Mf1RSuE2HJSnCIdMUvE40Zj1
      QAl7hRAMj2a5dWsN04dG6douV9+/wlNffrrj1+oWjWqDuZk5Zj+9SaVQQWjirnYk1EPGFeTz
      eeLxOKZp3v/kI3D9o+tc+PlHPSsAKSVuw0UoiIRDxBJRIlbkoadr1XKVfHELI9TZzxVA0zV+
      96/+NeFouOPX8gslFfnbeW58fJ3la/dPmNbTZcd7NfRBehKnYWNozfl8ZiRFKGy2xU4rZlGr
      1rGl1/ENP57rcfn8ZZ756jM99xkfFsd2WLy8yM1Pb1BYLbQ+u/u9r54WQHWrmfRK73LOf6VU
      s9HXbcKmiWVFGM4OYZjt//iEEGSGh1hZvI0K3z1kt/taNy/c4MyvnSES63ac7+FRSlHKl7jx
      0XUWrizi2g5CiEN1HD0tgLmZua42fqfhIB2PcDhE3LKIj+Z82Ya5sx64fXu94+uBnfTqz339
      +Y5ep500EyIscfOTG6wvrrfWWA/TWfSsAKSULF7xN+ubUgq7ZqMB4VCITDqJFbO6Mj0wQyZD
      qSSFUhkj1NmvafbiLGe+cJZoMtrR6xyVylaFmx/fZO7iLHbNRmjiyBWBelYAhdUC5Xy54yWP
      mvN5B11ohMMmmdEcZpvm80clloxRqzVwOrweULI5Cvzav/pCx67xsLiOy9riGjcv3OD2fDPL
      xY4Lsx30rAA6We9Leh5O3cHUDSJWmFwmjWEaPdHoP0tmOM2tpbWOrgeEEMxfmufMubPE0/7c
      29lhJxSkXqlTKVYo5UuU8yUqxQrlQpl6tY50JYiHm+Lcj54UQCfrfUlPYgqdkaksutH5u65H
      RdM0ciMZVlc7vx6YeXuGc9841/aGttPI7bpNpVBma3cjz5dp1BrNAD3F/r76DkYA9KQA1hab
      Sa/aPewrpVCOR256uK2v22lCYZN0MkGxUumI52mHpauLnD13lmQ2eejntjxltkM5X6K0WaKU
      L1PZqlDOl6hXGzh1G1CIfe6GdyvH04Gfpl0p8sn1JR6fzrFSdBi2FEU3zMnJzjag+Q4lvXIb
      DqOjuba/rh801wN1PKk62iPOvH2RF3/vpX1HAaUUKHAch9JGiVK++a+6PV2plWs0ag0Q7Bvy
      0YslbA8UwAfvvskbH89xeXwU09QxlAA0Tk52rkqkXbc7ktLPdVxSycSeALR+QghBbjTL8sIt
      9EjnFunLN1YorhWJD8UprhcpF8p75uSVYoVGrdH0wOzTyPthWrmbAwVQyFc4Oz3GUsVmOKSD
      EiBEKzFWJ4Lhlq8v4TleW3s5pRSm0IknY217zW4ghGB4JMvq2kbn1gNK8bNvvY70POCOt2V3
      Q+/kNMxv9rwTx7HZ3NhkeHQMTcDXfuu3+PjaEl+dHm5OgaKSohfpaJXITiS98houIxMjPenl
      OSyhSIhkIk65WkXv0J1owJew7F5gzyf48j/+PQuLt/jd//TXnBm2iKZyvPSF5px5aKR5Tidn
      /5WtCpsrm219TbfhkM2me3L++bAk0wnqtQayw+uB48AeATxy6ixf+MrvMJbtTlzI4uVFlGpf
      PLz0JNFIhEi0/+Jc7kduJMPK8ip6uDfvX/QLe7rF9aUbfP8Hr1Gp+586oxn52b56X0opcCXp
      7GDWzdV0jVxuCLcRpDk5CnsEUKs3sBt5bpf9z7xcXC+ytbnVltdSSuHWHXIj2YHuHcNWmEQ8
      6uum+kFjjwDGpx4hrEcYjvu/AJqfmWtbY/Ucj3QqgdnhILJeIJlOoCsR5Et9SFoCmL36CR+e
      f4/lQsP3VBFKKRavtCfplVIKU9OJp/yNaekWO6HTXj3I9fMwtLrIE6c/x/Nfs/mGpVH3eURd
      W1htW+iDV3cYmRxtg1X9g6ZrZHNDrG8WMMP9eaOvW7RanBAasrzBOxeuYOr+zZuVUs1yp23o
      /Z2GQzY3NFAuzwclEo0Qt6xgPXBI9rSU5cVZLl++TMlHL5DneqzcWDmyAKQniQ2oy/NBSWdT
      aJJgPXAIWlMgpRTPvvgbmLFPSUebw+jK7FXeePtDnnzycTYrirG4R8G1eOn5p9pmwPJ2va+j
      3NBpuTxHO+vydO0Kr77xKsNTz3Du9KMIoSOlx8yVjzlx+iliho5SCk00F6UfXvqQZ594Dk3T
      kZ4LQkPTBILOxfYPj2ZZWV7F6GC80CDREsDbb/yYtz++QjZuUay6pCM64ydOErlwjWvzNwHB
      5i0DAVTPnqJYLB45FkgpxfzFo1d79xouI6Odd3kaoRiTo6M8MjnOj9/4CblcmttreTynzuWF
      BRylCGs6iZhFw5PEQw4/+MkrhMKShiso1FzGMlm+9MKvkzA7Y6tu6GSzafLFrY6ESgwarU8o
      YkWJRSyEEcbUmkOonV8id/oZIsXrzG7ajKUlBRnFsixSqaP3tqXNLVYXVo80Z3fqDsO5Id+i
      PEeHp7DCFpMjWcLxHEJKXDHGZDbDRtVmKKzT8BqUbUhZBsXobZLpUa5c+5hHTp6lll8nYXZ2
      jWLFLKRUFLZKHd9P3O/clRhLSQ+Jhn6fXrkdibE+fvNjrn1w9aF7bs/1iIbDpDO9fbdXeTaf
      Xr/C1OgEUrfIxK3OX1MpNtfyzfxCx9Ap8KDs6R5mr85we22NSO4kz555pKMXlp5k6QgFL5RS
      aJ4iNXT43Ut+I/QQT5/xNwWhEIJMboiV5VUIBHBP9nwy58+/z+2F67z6xi87fuGNlQ2qpepD
      P9+tO+R8mPf3M0ITDI9ktrciBuzHnhFgemoczxrhq491vqjyUbY9urbLUDo5UBszOoUZMkmn
      khR9yC/Uj+xpgSFN8i8/fQ0R6myCJNd2Wbmx8lDPVVIR0g1ifb67y09iiSgh3UDJ4P7AZ2kJ
      wK6WWLi1wcj4CHT4g7o1dwvnISuieLZLdmSozRYNNkIIciMZPNsNbpJ9hpYAbly9iKtARLMk
      o511Kc7PPJzv36nb5HJDXUuh0c/srAf8KsXUL7QmhU88+xJnn3mBlaV5qrZHItKZ+WK9Wmd1
      YfXQz/Ncj3g0StganFz2fhMKh0glEpSqleAm2TZ7PgWhaUxMn+zoBZeuLqHk4bY9KqXQJKQy
      ve/y7HXiqRj1eh1PSkQwkh4c+q+kR3GrhOvYVGp1nEad2hFdas1yp4eb/jR3d2UCl2cbEEKQ
      Hc4g7eMdNaqkwr5fkbz33vgR614Ct7TKRs0ja0KZMP/+z/7woS5aLpTJ39481BzetV2GhgKX
      ZzvRdI3s8BBra3nMyPHZP7CTvtFruFhWhOz4yMECWF/dZL26Rt2yGElFUK5BXPHQibEO2/sr
      1XR5RuO9nbe+HwlHwiTjMUq16rHoXOxaA11oxOMxEmPxVjs88J2/+LWv8c7H1zgzNcLylsto
      zKPoWQ+VGEspxcIhBeDVHUanxoKpT4dIpOPUavW2pqLpJaSUODWbSCjEyHCWUCTUvSqRm7c2
      +dk/vP7AgVlO3WY4lwm8Ph1GSsnK4u2O5hv1G8d2wFPELItUJnlgm/Nt7Ju7+OAFLwKXp39o
      mkZ2OMP6Rr6v9xMrqXDqNqZuMJRKEo0/WGkrXwTguR7L15ce6Nzj6PJUXU5xGLHCJKJRKo16
      32V39lxve1EbJjs+fOh9Ib4IYHVhlUat8UDeH7fuMDY+PDDD8W6a+fUV0pUoT2IaOoZpYIQM
      qtUGGFrXhJAcSlBfafTFekAphdtw0JQgnogRH409dHSALwLYWi8+WOO3XdIDEuW5s7TyHK/V
      2EOmQShkEk6H7lqQJdOS4uYWlXoDzdR9b4Q78UK3VlYxOlyK6WHZvajNZYfakgChZ1raTpRn
      v+bwV0rh2S5IhWHohAwD0zSIpML7eh8+i6ZrDA2niTUc8usFXCSaz9MR3dDJZIdYXd24u/au
      ALHrgbhzgOYp4s45u95rO4Ts2g7KlUSjFiPTGfQ2pm7vGQF4jabLsx9QSuE5241d0zFNA9M0
      iaQShLZ7z4f94kNhk5GJHJWtKsWtMsLn0cCKRhgfH8Z1XGhWRILt0WzPY7V9ZOccFC1/olK0
      XIt7nrt9XuvxZ55313ObZ6cTCaKJ6OBWiXTqDsPDmZ7Mda9ks8IhUqFrgpBpthq7GTL3rWp4
      VIQQxFMxonGL/EaRmm37GrwWCocIhXtzGtRuui6ApsvT6gmXp5IK6Xkor9nYTdMgFAoRSYWb
      xbM70NgPQtM1siNDNGoN8ptbeKI3C831MwcKoLS+wrsXZ3nm8Slub7kMx5pVIs+cnGzLxbvp
      8mw2donyPHRNwzSajT1shQiFzZ4qERS2woxO5CgXymyVq75PiwaZAwXw0fvv4Mam+eV753EQ
      XPOaVQHbJQCv4TA65q/LU3oSA0Ek3PTEhCOhvuhVhRAkhppz4fx6kbrjoBmBEI7Kgd/8+InT
      iPwcy8U60pOgJFKpVjDcUXBtl3TKP5fnjpcmGbUYnciRyiaxYpG+aPy70Q2d3FiGXCaFcCVK
      ym6b1Ncc2PomJsYpOQZfns5yq+iQtRRbbvjIVSKVVIQN/za2K6UQrmJ0JNPXt/t3E4lGGLPC
      bG2WKFWq6APyvvzmQAFYiQzPPZ0B4LHt5GvtKI7q2S4jkyNteKX7I10PyzQZmkgN3A4oIQSp
      bJJYsjktangeutk7a5d+wHcvkFO3GR7OdH5juwLpNDfTWLHIQM+VDdMgN5ahVqlTKJRA715I
      Rb/hqwBaUZ6Rzro8pZQYSjA8lh2IsIoHQQhBNG4RiTanReVavSshFf2Cks2bmb61Dl9cnkoh
      t+8rJIcSx/LL1zSNdC5FrBElv1HEUZ7vIRW9yo4jxNA0YlaEWDbtnwDcusPYROdcnkopcCS5
      XLonbqp1GzNsMjyepVqqUSiUEKHjORo0w1Y8dMCKhImPpvY4QnzbDzA0lMQwOnM56XqEdYPM
      RKbv3JqdRAhBLBnFikcorBepNmz0Y5If1LNdhNpu9MPJVozWZ/Hl00gm4xQTnXF5StsllYwT
      S3YmWGoQ0DSNzMgQ8bpNfqOIO6AhFZ7jIiREwiHiufQDReH60x10oGEqqdCkYmQ041t1mH4n
      FAltR5pWKG5VBiKkwnM98CSRUIj0UIpINHyo99SX46F0PaxQiKFcqu+/QL9pRprGseIWhfUt
      ao7ddyEV0vVQriQcMkklE0Ri4U7tCFO8/sOfMDGZZWHTZiwuKbgWX33xuYe62FFRSqGc5noi
      6kOZoUFG13UyI0PY9QabG0WkJnp6WiQ9iXI8QiGDZCKGFbPaYu/BibEWr/HOheuc9ioYQuN6
      UUeTBTzvGTzP39R6UkpMBNnxXN9t3O5VhGhGmo5NDlMqlCm1OdK0lXFn9w4X7myOUbK5R7q5
      V7p5cOcpOxYIAaZpEo9aRBNR9DaL9EABbGwWscsbqEaWjZpiLKLIKwvbtqlWq22pFPkgeLZL
      InZ8ffudRghBcihBbDvStFpvNP+g7jRisfNPiO19Ec3I4F07Jrd/F81ayEKAJvYcb/1t++9C
      01rnNo9rd/7m0/fsS2KsxYvzLHw8e+hr7Pj2s8Npwj26UXsQcW0XUAhdQ9O0ge50enYRLF2P
      sGGQmfQhbihgD8eplljvvVMF0nVJJ+Md2wgdELBDTwlASYkmYWQk8O0H+EPPCEA6HtFImHQm
      GYTyBvhG1wWw49vPZFJYsaNn+goIOAxdFYD0JKbQAt9+QNfomgCk7ZKIR0kOJbplQkCA/wJo
      blCXDA8P3TNENSDAL3wVgHQ9IqbJ0ETg2w/oDQ4UwMrcFX78L+8yNZ7lVslhzFIUpMWf/v7v
      HO4qSiFtl3Q68cCVOwIC/OC+ibGiwma2WCIaUWw5BobjHDoxVsg0GB3LEgtubAX0GAeOAIs3
      rqAncnxuZIj1isdYSlKQh68SGQqHjk12hoD+4sBWOfXoE0w9+oRfthw7lFIoVzZDgTWBZgTr
      Ir8JumUfkZ5s1hnQDYyQiREyCVkR9JCBW7epV2o49Qae5yKMwY7C7BUCAXQIJSXKU2iahr5d
      VMO0whjh0L51BkwrjGmFW9VnGuUqdr2B67oI3d+6BMeJQABtQCmF8hQC0A0DwzQxIyHMSPjQ
      +22FEM3RIZMiup3oq1GpYdfquI7T3GQSxEq1jUAAh0QpBVKhZDO1iGGamOFmYzdCRlsT8Aoh
      0E2DaDpBNJ1Aeh52tUGjWsNpNJrbsHyuWjNoBAI4gJ3NcsqTCASGaWKEQ83ePRzyPeWgputE
      ElEiiShKKuxanUalKQaJ8r2E0yAQCGCbVmOXCjyFbpqEQiZGKIRphdBNo6cal9AE4ZhFOGY1
      C0fX7eZUKVhEH4pjLQAlJcpVaLqOaYYwQs2FqvkAGcV6CSFEaxENzT29zUV0c90QiOHeHCsB
      7CxWDcPADDWnMWY03MxGMEANxAgZGJkkUZVAeZJ6eWcRbYPGwBUKOQoHCmB18SYzc2ucfSTH
      UsFlNCYpuhGeOnPSJ/PaQzP/DIQjEaxkHD3UW9OZTiGEQBg60XScaDqO9CR2tb69iLZRQvV0
      Miw/OFAAyewYlfPv8trKArGIyaKnIRB9IQClFEoqDN0gkowRjlvHPgJV07Vdi2iJU7NpVJvr
      BqnksbrfsJOM6+BYoGsf4VrjpLR1yg2XqABbmK1guHg87pe9D4ySTTdl2LKIJGIYYbMnvtRq
      tYRmRIh8ZrO/9Fw8BKbPdYmFphGKRQjFIs1FdMOmUalj1+p4nrvPE1r/0Yzd2JURi7sePuiB
      Q6K2k3VBK4UcomWPELuTcG2XiRICwU4irjs/2T7nQAGkcpM8orZ49OTTlOuKZFhR9cwjV4ls
      Nzu9va7pWPE4kUS0p4b2rdVr/PSTRbKpOKeGk6hIhvzt6yjdIixsakYGnDrZmIGI5pgezvhq
      nxACMxLGjIRRKtkK2QBQ7JPeUO36ddcvezMg7sq3tpP28DOHYVf6xM88r/lQtexDE2hCa933
      aGWn25Vp7mE4UADD49MMjzcfJ7crG/VSn78TTBa2LKxErOUF6TWK66uceOxpxqI13jn/IY5X
      RxoGnlOitjLPhhzmL/7kz7ky8w62vsb08Fe6ZqsQ4ljtz+5LL5D0JLrQsWIxrFRsezjr/jTn
      Xkw9cY7ZX73F8tAEJ8azyNAQVsRAejXqo9PosRxXrnxKOjmEZvnb+x93+kYASjVvUJnhMFY6
      jmn1j69eaCG+9uWvd9uMgH3oaQEoAE+iCY1INIaVjAUVDwPaSk8KoNXbh0JEUjFC0cEudB3Q
      PXpKAEpKhNKIxKJYiRh6sI0yoMN0vYU1wxMkphnGSkcJxYKsEQH+0TUBKKmaJS2jFlYqHvT2
      AV3B91YnXQ/TbM7tw0GOoIAuc6AA7NoWP/zpW5yeyHBz02E8Jil4Fl//yguHu8p2FGbYsrBy
      sZ6LrQ84vhwoAKkElUKBa6KBh85cRUeXZRzHodFoPHAsUCQWJTs5GoThcicIa291xF2IXXt+
      t2NbAjrHgQKIRBOk4lHiYZPZTZsxy6Ugos2F6yFq6zWr/x2Dxq+2I152GrjcPrgdqNVq0EIg
      9J1greaxPcKQajuoD1TzRe583juVGcX2c5v/BTwkvlSJbGxUsTdqD3OZnmJP3Vt5pxPY6aXF
      dqPc6cVFmzM47IikJZCd33e2c+4WiXZHGIFI7k3getnms1GJO2HVe6Yh272v0AQYmu+b0HcE
      dpCo7mStUK2NQAp5J2IzEMkejpUA9s6/mz+FENupCaEVU66JZsX0Psy/I4QAXYkZgCEAAAXe
      SURBVCAOiBhpicTbFgnNqZZSzZnVA00K7iH8nY/z7q0A+20cEPd6Gd/oSwHc3ZCh1cVtfwOt
      /Ru7eridufPu+XfzKf3X0I/CQSJ54Bnx7tN2pmD3OL77OXv3EXzGCXD36XeedOBXJLgzxN3b
      VoVCIHa9nOquAO405KYxdxpz64y7hmaxaxHYmmO3pih3zukNFH/3f/4Hp556AaO6zlIjwYuf
      O4muCYaHx7h99QO+/e4V/ut/+Hd88s4PiZ98gQ9/+T1On/0azu33iTz6dXJRRTYRoVB1GM0M
      ddziB/7sxN2/9Mqnfhh8E4By5Z7f9zZkQNO2e23R6r57ph0fAdu2icWSzN/4iKuLGxTWryKl
      w/O//hdoWwXq5TVWt8o88eRTfOv732b61Bm+/8//xHOfzzHzg+/gySrTE5PoQuPP/+jPCKon
      txdfBKDpGoZ1PL+6zz//RZ47+zjO5gIyOsKJE5PYTp1kWMeOJDgzMUJxq8rk9ASRcIwXP/8k
      Xk1SKK3wwnPP0nAajCTDLOVr/Tlf7XEO5QaVnotEYOj6odygTqGOk68fydCAgE5wqLtTr3z3
      O/zDP77cKVsCAnznUKOqDCVJPtRts4CA3uRQAnh8OktBWp2yJSDAd1prgI2NDaSU9zu/Rblc
      xrKaYtC3kzp5nrfvY7tUR9U8AKSUrQxtweP+efzZsI/7Hd/9Gs3jCk17sOfe6/i9Xv8oj1EP
      yebmprJtW9Vqtdaxez1eXV297zl+Pg7sObw9tm0rx3GUUkpJKfccd11XKaWU53mqXq8rpZRq
      NBqt467rqkajcddrOo6jbNs+8Fqe56n19fW7ztltb71eV57n7XtcSrnve9057kswnOu6GEbv
      OPECew6ml+xRSuF5Xsfs0b/5zW9+82GeWK/XCYVCrWnObuzyBq++8gprxTKv/+hHZCen+fa3
      vsfjj2T4zvd+xjNPnz2q3Ydi89ZNXn75VUqlLV75+Xs8NpHgu6/8AlVd4633P+XJs6d9taey
      ucQr3/sem6U6P3z9TaYncvy/f/oJMb3O67/4gM898biv9tilNV55+WXWtyr89MevMTw5yWvf
      foXHHs3yrR/8gmeeeMxXey59/B6vvfkehduzfHpjBQrXubAA5998mUhqhKFU+/ITdiRIPxTP
      MjWSIr+ywuSJE8wtV4jFIkSSOSJin8SrHSYzeoKUZXD1xhonohHsoTF01eDsk0/geZ7v9sSG
      JsglI8zO3uKx0Sx5aRE24dTZs+TXV3nwlVh7CCWGmRxOsr68wtQj0yyuNUhaJuc/voEuKz5b
      A6fPPAHSY7Xk4W6VODU9znppi0a1yvzicluv1REBlFdv8vr5G5w+fYrF2Vkee3ScXCaNaYYY
      GvI/qe6NC7/gZl7x+dMjzFZqDG/b8Y//91tkRyd8t2f15kd8MFfm2cfHuX5rnYlMgsxQmmsz
      F0lkMr7H1JRuXePnH81z5vRJFubmOXlilFQmjam5FIq1fePLOsmr3/02iaExcjENPREnFEkw
      FLeYmn6k7bb4sgYICOhVjsE+xWOMUlQqVaTboGYfPPUsFwvYrke1Wj34JaWkWtu7u096DvWG
      fWRzu0FvLPUDOsbrr34fZYR5/qWXWFy6zZmpLJcXN0mHXHLTZ9Fq6yzkG7z+/f/Lf/lv/50f
      //BH/PEf/yEfnT9PemQcy9BZL+YpVV1OjsS4tVnmjbd+xh/96X9kY/4K048/wYW3XsXNPsM3
      vvR0t9/uoQkEMMgIwW//9hf51g8v8P7rL7OyJVi9NcKFmetMjY/zV08/z7dfe48wHhOPnSEe
      bnr0pF3lJ//8D7jj5/jCVIKPljd4PBPj4iX4g9/8ArnxKd58+X9zdT3EyM9/wePnnqMPN88B
      gQAGnlAsx5fPPc2Q9TTvXZxlajhByIwzMTWOEIIXPn+WhbzDmXQE0ElGND64eIOnz73E2Mkn
      mbuxyK+/dI6MpdNwalxdWOP5Z55FeU8yOT/H2MkzzF29yKOnR7r9Vh+K/w8ur9ML9XyN3wAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dd3Cb6X3g8S96BwECBECwd0oUJaprVXa11q62a+11WW/izSSb2EkuGWcm
      k+Ru5iYzzs3c5e6SyV0ul8Q52+u4e73F3r6r3bW6ZBWqUCJFsfcKEkQn2ov7gxIlikWk2CTh
      +cxoRAIP3vcB+P7w1Pd5ZKlUKoUgpCn5amdAEFaTCAAhrYkAENKaCAAhrYkAENKaCAAhrYkA
      ENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkA
      ENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkA
      ENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkA
      ENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKaCAAhrYkAENKacrUzIKyOkVHfamfhniBK
      AGHV/ern3+f73/k2DZ1DS3rcs2fOTnvs408+mvK7KAGEVef3+7HnlqFXjPP6W+8A42QbNXR6
      xnBaMmns8VBSnMe182eJSCoqih34QlEqi/M53dDN1u072bVpLf/4d3/DtocepqWjn0BMwtdV
      T39fB339w7iK1/H5Jx7m6vmTDLQ3YTBnkrPpMVECCKtMirBm06Ps3baOT399hHg8TjgUoWNg
      lBdf/AqDrXXsefpF8oxxhsIKqsoLKayoRhUPMRRR4bIa6OrsAMCaXUhepg65xkBfXy+la7cw
      1NNJ5bpqMk06AGw5JXzxyd3InWs4+9O/EwEgrDK5jrivizffP8Qzz36BbIsKQ6aT557Yx5tv
      vMNjL/0xXWfeQ7Ku5andVciNdmwaOWprLpurS1HIZWxYvwGADes3YHHmokrF2LVzJ6UFWTzy
      xAEGu7vJKSwGoCQniw/P9fDMw5tQO4uRpVKp1Gq+f2F1pHsjODDUTV2XTwRAuorHE6udhXuC
      CABhSXg8Hux2+2pnY8FEG0BIayIAhLQmAkBIayIAhLQmRoLTlMfjWdLj+Xz3Z7eqCIA0tZge
      m+/9r//Gk6/8GUMtDVzrGeSrzz9LuNOHJraEGVwhIgCEBYmMtDKutXHsvTeQG0pRKyau+mQ4
      TiJ5/0WACABhQQZHJb7+R39Ia/0Z5Jo8/H4tAAq9CqVevcq5WzgxEJamlqMNkJGRsaTHXAmi
      BEhT820D9HV24cjPp7ujg6KiwsnHRzweLHY7irs45r1EBIAwpwtHP8BSvoU33z/M1196Dnk8
      RFt3PwqdGZfDSEzSsGX9WsYuDZBSBVc7uwsmAkCYk9ZeytH3f8mGmu3UX6knGRgiKlMyGPQw
      7DfyxJ69q53FRRFtAGFO3hEvsUQCuUKGf2QQbYaDoe52XAXFqBnHF1VSnOeip74Dq9Gy2tld
      MBEAaUo0gieIKlCaulODtan+It0jER59+KGp82Xifq51hKgoy56SPhGMYVYalz6jy0wEgDCj
      K82d7H9kN2dOHKPfG0YR8uCLJnHYTUR8MuqvmVCnvBSWb2FdRSHB1lEUqvtvIExMhhNm5MzQ
      cejoCeJSipSUwp6dR0lhIUaVDACZTMLhyKGvr3uVc7o4og0gLIn79Y4wUQVKU2I26AQRAGlq
      rm/r4b4O3njvQ0qz3NQ8/TxZmqnPNzY2UVlZPuWxs788iSIqW46sLitRBRJm9Na7b1GoTHGk
      sRuD2cLlpk6e3lnKlU4f6mSU3tYWSspcqEqf4JVntvHTv/k+ybH4amd7wUQJIMzIbrNjVCh4
      ZGcWAyElhSVlSMFBSooz0cuTFOblkusyoiioBMDqtqGwiRJASFOiESzcV0QjeIIoAYRZffjW
      a8gtNpCbcGfIcbjy6R4coqo0l7a+MSzqOKoMNw6rkf/5jb8lMBBY7SwvmBgIE2an1PHw5/YR
      HrjKxRNH+ad/fJXeliv8y88P4cg08cabb3Hs2NHVzuWiiBJAmFVz/UW6Bj2UV6yh/uJ5NEoz
      BcUOgnE5I14fFmUMmdFJTVUZn7x2EIWkuPNB7zEiANKUmA06QTSC09Ry9Njc7TEX24O0mNeL
      NoCw6hZbcizm9SIAhCXh72viuz/8JbEUXDh9jI8PHb/ja+rOneSDT4+iUqmoP/UhZ5qG53/C
      VIy3fvhdmnp9jA728Iufv0EoOf+X3zi3CABhSbRcaqMoS8vQOHR7QiQCd75BvrfPjzwcAiDP
      mclIMDr/E44Pocsqoq2uFWduIWpZAvkCBqJvnFsEgLAkStYX0+EZRzU+Qp7NgMJ057vDctxm
      JL0Br3cEjclKplFzx9dM0jqIDLeTX2aj9vhnBJUmUgsoAW6cW/QCCUvifp0KIUoA4T6Toq72
      NN6FVJdIcvrYYVq7+qc9I7pBhftKYqyDX9d2sE+nYUhmIBnz0d49RGFxPl5/HEXcQ2aWm5bW
      PooKXQTjcrbVFDPojdA1cBJ/vxO10Uxnjw+bISFKAOH+EkvIeXzvNs5fOE39xYscfP1HWEvW
      U3uhkcrSTI4fOceFc2cY6u+kvrWXzvaJe5Zbr9axafsujh4/wdXLp4gn1fR6xDapwhJZuTZA
      irraM7jLqhnsasPldtLV0UNZSR5dQ0HUiQBWdyFt15ooLnQxHJSoLHbj8Yxht9voaW9Crs9A
      rdQTGOkSASAsjft1KoQIACGtiTaAkNam9AKNjN6fd/WsJJ1Og16nJRwZJxJZSFecMBulUkGG
      2Ug8nsAfCK3ouecsAZIRL9/59rf59r99h2BscTWl7/zzP/CrX77Buwdv3kAR9/VyobFv1tcc
      fO9NWrsH75ju0Adv8qMf/oAB38QFefyz93jz9V9w8NiZOfN063Hr6y5y/61pEOXw0ZPAzc9q
      QpxLdecnn5uNp/Ucta1LNS06zqW6K0t0rNklo35+9pMf8ZMfvkrX8M3pFufOzP23ns2c4wDJ
      aJBwLEVFRSE9Fz5ixLadvrpPSQW9RBJqrLYMAqEATksmF5s60ZutaCL9yDNycWhjDAWi7Dvw
      NfJtOsZ8AdZUZ1Lf2sOhj96mqeEK+ZVraB5RcOSdBiKSij/7y78g0HaOXx69ilwpp6ehlnU7
      9tPXdpJjdSFOftxNXJJhzVCg1lswZOZzYP8eWjq6MBjMJJJJSPq42hHk67//VYaGhnjtB/9G
      NBbDZrdhqX6SvrpPGWhrRK1Qkl9RQbNXxVvfP4bNlc/AUCfNzb24Cgq4dv4ilZt38PxT++7q
      g534AP38j7/9Jyo37yAWGWFXqZWzgwq62zspKcmnre4SGTnFqMJ9eEb9FJaW09w7ytYt6zj+
      8WeT5284f4IrTc0oLLnUHfkEtdXJzuoChkIxQkkDe0ly/NgJFBojtSf6UVhyCXl60el1vP7W
      O8A4+D2YCtfQeOY3k591LOTlvU/Pc95uRiuLUWw3ULj7AOH6T/BkbqL7/Cf0dfUQkVTsf+wh
      Wlsm8nDx0Mf80V/8NZ1nPkJusXGyJUiewUckFOWjd96mcvMOxgev4Rn1s+vzf0BN8dL1Dp34
      4C027n+JCqvEkGeEH//gLQZ8ETSRQbxDvTR2D2Cx5xAdbmWkt5XK3V9gbHQQpdZMx+UTZNkc
      PPnS1zh9/DxffvahuUuAYCDMs19+iWylh9rmYeKxOOFQhPGUmuce38W1ziFefPEr9LdcxOIu
      IS/bwbrqaoY6W7AXV6OKh2i7PvpmsTlRxHwUlK3FO+ZFloyQlGspdpgZCiuoKi8kkYTutjYe
      fvbLqFMxSqtqcNtNOJwuip0WzPk1VOWaGJWMfOHLLzI22AXApu17eObhak5fagWFFikeBlKc
      OXOGmFzPl57aQ3N7z2T+M1wFPLdvK0m5juKCIsqqt5CTZaahsZnKddVYjSbWri2htb1jUX+s
      lKSaPE48PnHunrYm9jz9InnGOKbcdWxcW0JbTz9V1dVYs9y4rAa6OnqnnH/YM4pOq6anu5eS
      qk2Uu220j0T44vPPoFUAKCitqkGZik2mmyCbPC9KA49sKZ3yWQPsfuwZtLI42SYNDSMJckwq
      yrZ9jrM//TvcxZWT6fsGb+bhxue1dddWfvD6EZyJRgyONVPeb/v196QisajP8HaZmRl4RryE
      vX2cO3uBGEr6+7vJKaokMtpHQflanHYDmgw3e7ZvoqWzjy985avEg8PkFlfwyu99lX/92//O
      lkceAaUZxbe+9a1v3Tj47XVardHE4Q9+SX9YywsvPEfd8U/ILqqkMj+Ls429fOGJXbz/wWfs
      e/6rjHZexZFXgjweQmt1U+w0MehPsGP7FvRqJUqVii0799Lf2YRJp0ZttlO+poZgeJw1uUZi
      KgvrygtxFxRx+tN3Ka7aSo7TjsvlQqHW0TXow6EOMK7PRhvoo7Gtg0f3P4dJryYw1M1vrg3z
      7P7dKOVKMnUSnxw5xrotu3FnqDhxuYcXv/oVLp+YyH9hbjYupwtdZg6B0UFKCvNxOh3s2LaF
      yxevULlxK96BHgrL1lKQO3UZcJVKiUqlJJ5IkEjMPftKJoe25mYKy9ZSaDfSOhRg92PP0HTq
      IzLyazAkhvAn1GxbV0pb/xibN1bR1dlF9ebtBDwDk+dPhP0M+iXWVpaQk52N0+lg8/oKPvjo
      CKWVVbidE9+wNrPutnS5yKNeEpoM1paXkpVXgS4xNvlZy4C6i7VUrNvCxiIj18aM1FTkgUzJ
      hastPP/5z6O9nr4yN3PKsV1OBwqtFb0GCl15rN+2Fa1KQcg/RmHZWrasLaGtf4ytWzahVs7d
      1yKXy9Fq1EiSRDQ2d0XUUVBO89lD1Ld7ePyxPXS1t1JQUsG6Ejf24ip6WxspLKsh4evm9Jk6
      Xvjd3+PkR+9Q89A+sqwm3PlltLS28PjDOyf+Rrd2g94vjeD6uouUr69BtQrnflAbwUc//ZAt
      jzyJXiUjMNRNXZePXVvWrci5l6MRfOLQh/gSep56/BFunSXd397AYNRATWUBcFsAxONLW1w9
      iORyOQqFnGRSQpKk1c7OA0Emk6FUKlalF2hKI/jIkcPU1NSsaAbuN+3t7WzduhWFYiIQFuJ+
      nTK83Fbzc5kSAEqlkp/+/Y+JjEaW7YRmZwZaafl2FHfmZaAYX55jb/rtvYRCK/sNtVivfu//
      4DBbKd7xJLGxEcrybLQN+DHr1bzx6n9BW/4lnt7kRmZykgwMYc+vIEO/GpXL1TGtGzQyKqew
      1A4Y6W0fQhYLk72phlhXM6EYDPf7eejJGo6+dZJNT+4gOjaKTGOgu6EDhVJGXmk2vZ2jBIZH
      sWdb6G0bnHJ8jUZDWU0Jbef7KNuZja83gEqrQpdhpL9lkFQsgtpkxO620lLbuuA3pMjS4C4w
      ARq8PaPISaAymoiO+VCbjMRCIQz5LuSBKLHxEDKlkvFAFI1RzXgwjlavJOi5/1Y4m43Fkcu+
      jUX81f/9LtWFVroKimlp6uDJahugYsTj4WytB7UhQfOVXiq37ea5/Q+vdrZXzAzjAElAATIo
      rMwhkUigMhtxbqwgMhalvCqO1zvxLdjfPkh+hYOYN4yzJBe7XYs/qKR6tx2fN4pWJeHpHCQ6
      U2eJXIbe4UCKyXE5tfQPjFO8uZTIWISUFCLF3Q+86e0WiINMbgNAplBgzHUhjXkx2VSMI8ea
      b8UzqEYpl3CVO/B7o5hsKVApHqgAyLaYON7o46+/+ducudRMfrYFtUqD0mVk485nUGTk4TKr
      QA4Oay+ZeUWrneUVNUMAjOP3ZZCKDBONTTTyZP0BRpUSOrMOT58XV451ImlKwtM+QDCcRKdT
      MRD0EYulCI7pSYxHMBjVJGe4jvvaPeStsdF+qglZKknMryESg8BICBJRlEYTieDoXb6lBMON
      vRNvTaFEQYJkEpAHMLltpEIexr1eOppCGN1W5Ho1g02DxJOgNerJMGvv8rz3pof2PD7587Pu
      fADWX/+9fO1tiSvWrEymZiGXy9HpFnBf8BKYcSQ4GooQGAniyMtisLUbSRkhoZfhHQ2jlsfp
      7x5Bpdcy1Nw54wV+R/EoPdcGMGdq8Q8F8A3d+qQMrTHE+IJuebtVEhQawkNelDoN8XAUhVaD
      RhMnETMRHR1HjoKUSo6/xzOlnEmMJxgfHZvXWcLhMOFweEE5u19XUF5u8fhE378kJQmH7rya
      xK3C4TB6vf6uzz09AGQK1Jk23IowMqOBRCyBSiOndHMZsaSStjN11HxhL/6GOi78pu2uTuou
      z0OulhMaC2K0WEjGx5EUGhRSHLnOiMmqJBqI4vWEycjUE/EFGOoamd/BZXIURiNWeRxrVQkd
      n14iqyybVDKJXK0gEE3g2raGaHcXA81T16GJB8Pzng+k1+vv6oMXvUDT3VimUaVSLfjzWWwP
      0vR+PJkMb0cP+iwbSiTiSZCRZDySoL+pg8Kack69eQRzjouq7eUzHPLOlHotSoUCo9WA0aRB
      n5mB0aLDlJ+HThnHmOMmKYHdbUGhVmK0W+Z/cBmMD3kxleQjSyZRahT4+rxoTVoCfR4sBS56
      ftOIJtOCo8x1V/kXHhzTSwApgTEjg4bTragNWnQmPQlJRu/VdmKoaL9wDXkixamP69AqF7AQ
      yy26LjYzHk5gdRoYD0RJISO3pgz8w3iGgvS2/gaDVU/vUBCVSg4LaRBLEmqTmu6TDci1GmRy
      BYlwlKHGbiSZirH2fmRJ6LnUhVIuBrJuF/dHSQRm3/Bal2Nawdwsj0Q8QfvlNhLx5MxtgIHW
      nomE/pvjAVH/9HR3uy+42mjAmiUnllKiTUh4h4NEfEF8HX1obFaUcQ0kk+iMaoIjC++RCQ5M
      NKCl8M12RCQCMHWA4O7C98GWCMQY7539M38QAqD7WjdXTlxBJpOtzh1h/sExrHl2svKzUGlV
      gBJbXhaZOTZKthSh02vILM7FbNGtRvaEB9xgxwAy2cQMoVUJgAyXFZmUwtM9TIbTgibTTCoU
      xODIJB6RCA2PEBjyYXVmrUb2hAeYJEkMdt4cnF2VhbF8/R58/RMtf0/7xGOXj0zt5Qk1ddPf
      tNI5Ex50Q11DJJNJ5PKJ736xMtxSSoT45VvvU15azKkr3RSV2ijNNJIwFVKSk7nauROA/ra+
      yYsfxKoQSyoy0ERbIMHpQ7UUZWmpb2ritYPnKMnJxOPxTA74CKtnoGNgyu+iBFhCOlcpZdZW
      rIUlNPUFqCovZ32OnXMNnWxZW7Dk+3IJC+Mb8REOhFEobm7mJwJgKSlNHHjhSwDsueXhe6Ep
      n4wmiHlmn+b+IHRv3klfS9+Uix9EAKQNKZp84Pv372Sgffry6KINIKSFaCTK6MD0GcYiAIS0
      0NfSh3yGW1hFFUhICwMd/ZOjvwDJWIDaa02iBBAefJIkMdg19dbcvo6ruPMrRAAI965Uchzv
      WJi2aw1EEhL19fWkklHqG1sWdJyhzkGk5NSZv+7CSvq7m0UVSLh3XT35AY3JClRjddSe+JiY
      ysHxM1cxGjQUVJZy541YJ/S39U8Z/QVQqM1sXbdRBMDSkvjFT3/I5g01HKptF1MhFmnt2ioa
      L19frC2VAtnEf8gmbqP0zPMW09tHf28lAmApxUYJBlMc+fgMRWvyqG9qotYv8Vff3CSmQtwN
      cx57aiAwKCO75EXarl1lbWUpDc3dWFUqsNvvOLru8/gIB8PTBsBuEAGwhCS05ObZ0euMXOse
      e6CnQkR6A3MOrFm3uRd/EpWeLAtkWSaWr6iqqpr4v7J03ofoa+md9eIHEQBLSq42sv+p5wDY
      fcvj98JUiHTVP0f1B8RAmHCvCQ/w9//wz/z03YOLPlQ0HMU7w+jvrUQJICyrZDSBNOPSgBNU
      5tsWwlIocOWW8NC6u1tx5Fa9rb0olLNXf0AEgLDMYp7IwtoKMh2XLxzFaFJRVFS4qHMPtM9d
      /QERAMJ1/sF2/v0XB9m7cQOfHLzAK88+z8mzh/CPJ0mGBvFLWkKyDHbGS9m1a+fyZSQRJCxp
      SUiL26tCSkoM3Tb6e6tocByNRi3aAIs11N3C4WOnGE/c3/uNm51F2FURJJ2bWGjiwnEYVVzs
      GsITiPDkzl2YkkNcrL9Ke/8Ma+QsFbmOP/36yxS4cxZ1mMGuQVLSzH+TeDhGbn42TneWCIDF
      utxwjVOH36ZlePn2VFgJI73NjKst2Ewm3FnZnLtSyy8OfshjO3ZgtbmxWlwU5ZdT7lIxMrp8
      q2efOn2GH/y/f8YfXVwJ0N/Wh0wum/Z4Ip7AYjVPzgwVVaBFkKIBrlxtJi+/DLNm7sbWvc6W
      U8Yrr5QR6Q1w4HMTXblb1m2eeLKkGIBt67dM1tkjc9TrF+OhresYkzmJ+qbfvLIQs9X/5RIY
      zYbJ30UALIJcY2Lfw9s5c+4yatXEt83Fw78iYSnhYl3LvTEVIhnl9R99F0fRNk6/8wlfeeF3
      Geuqo76tFaVKTjwm0Z80LX/dfr70LjKSdVhKbl+7ff7GhscYD41Pm/8fH4/hcNimPCYCYJFC
      SRUZqhAjwQQOTZSW5iZ8pCjK1a7IVIjocJiYZ/Zl2k1r7NSsKabOoyBbn2I0HMXuLCJZ9xuU
      6hSjqsLrdfs47uJ1uJhebVhRoR5e/cWn7NgTYG1p3l0doq91+s0vqVQKrVqNWjN1ey7RBlgE
      KRqg9uwZUoZsMg1KkokkaqOVnGIrHZ5xqsrL+b3nd3OuoRO73Y5KtfR7b0mxJIlAbNZ/qXiI
      hs5hdNIo/pSOrubzpLQmMs06Dtb3sXvDphWp289X+2CMLz25CUum866P0dfaO+2x5HiczCzr
      tMdFCbAIHe1trCvLp6Glh0BUItts4cBLX5+W7m6mQizVXBuZysDzX/kd4v4oQefNasWufS+z
      a9/Ez0XOrGWv28/Xhx++zbBvnKy8u2tT+Uf9+Dy+KfN/4uMx7FmZyOVyLl8+hhcrD1dP7IEs
      AmARdGo1TQMRdm6uxKgRH+VS+A9/8ueLev1Mk980ShXa61sv5duMxMnn/KWToDWKAFgMrc3N
      b32pEL1OrGK91EZGR7FlLrzj4Pben1g4Sk7u9I1QmlrrMTqLRAAshhTy8r0fvU0sDl975Y9w
      ZqzsBm+rwdPdxJHzrRSYzHQ1j/Loxs2cuXCcDHsu3S0XceWV0++LsiEjQEVFxcJPEB3jx69/
      TIooW3fuo7J4/gNisfEYI/0jk/N/pKSE2WSc0iDOcG9kE7DphYmqqmgEL4LNXUhJbi5rc80M
      htNjuw17Xjme+iPILCVcqT8LQHt3G00djZy/dJITF87T0l7PsZMXCM4xCW5WqSQphQKHM5ux
      wMI2Fexr6Z1ysafiSTIyzXO+RpQAi/T08y8QjcXR3Na99qBqOPUhfYpcQgNXsWflcfZKLYU5
      BYxF4+TkV5JfthVNKoDcNkZjywBVlrkvwGkUOozKGOMpHU9sWNhYwMAtG1/Ex2PYbdN7fW4n
      AmARpGiAf/r2q7gdNrY/8WXyMx/8KtDah57ibx6a6C2qts9exbnrXiUpgTEzG3PmAjZGvG50
      0Dv5s1qpQqu/857Pogq0CHKNib07NyNTadEtfRd/Wvr5z3/GyYtX2LDu5qbdxz87SHdfH+//
      6n18o/28/9nxmV+cmpj8FgtHsTnu3IBOpVKiBFis4WEPGq0WuUwGiQjvvvYjYvpsWtoHcJXY
      WGPVYyvZJlaFmKcvvfQ7fPbpZ1y80siOjVWAxMXLF1Ezhtxg4l9+cpSaQitjwExlhJSUMBsN
      KGZYBnEyTTyJVqVCrVGJEmCx3O5sAkPdDAXjoNSxfusmOs83sLEyn4BvlJOXOsl1Wec9FcI/
      2M7P3vyA7p5mDl24AMCZ80epvXaN4yc/pKmzmU9qL3Dt2rXlfmurQqnW8cTTz16/+AEkNlSv
      p3s4RF3tZTaWZHK5qxdlPD7jIgNSPEmGLWPW46fiSex2CzanFZNVjAMsmlwG/qgMu0lDKhak
      sXWIL37jJS7Vt/G57bsoy3PQ2NJFdcX8VoUwO4uI9LzBz5qbMHvCxDdu5GJjHaSiyM25nKp9
      E2N2Lv6TAXIKS7m/56DOh5I9+56c8siN34y3LYsSj8bJtM3RdkgkcTgyUapvXvYiABaprb2H
      AruGfn+MrGwjTzz1NAAFefmTaaorbLO9fJqR3maCsSR6lRFvMsKlK7VIKQmlLpPIUAcVW57A
      kPQQjLVy7Gwre4uyl/w93a/0Wi26WRq+soSEw2WfNklOBMCipNi0qYbj5xupcumX5Ii2nDK+
      +Zf/acpcoMl5+be4V+bu3EssmWYSsak30qSkFCpk2N32KatD3yDaAItw+exJgiorNTka6vtD
      q50d4TZSUkKrVJKVbZvx4gdRAixKYX4eH584Csk4+9eL+UD3EimRxKTXYbbOvfWTCIBFMDnz
      +dIL+XdOKKwoKZHEYjJiMN+5WioCQHigSPEktkzzvEaBYYYAeOrF/RjVhpnSCktgPrcwCncp
      mSIryzLttse5TAsAozrGT378Hva8bPZv3kg4pcM/0oHDWUBXXx86jZr8nFyudXbjtug4eOo0
      Tz+yD7t1/l19C3H42HvEURJTmllT4ACZEWUiiExjIeTrI9Pqot87RmVeNm2Do2Sok0gyLeFE
      ivLcxa0tc7vFLdQx4cYtjMLSc7psSImFzUCdsQpUWlxFXO7lvV+/j9aajzwVovnaaSJKF/F4
      jMOXm/D5+snNdmNShDl9tYlndj60JG9iel4quXL1Atd6fIyGBjCr9MiRiIX8EAvQ1eOlZtt2
      /ubYKXYVO/AnEijDfoJyLeW5X1yWPM1Givo5ePBTTBYHV9uH741VIa7ze/2c/uzUrM8/vW3i
      sxoZHKH3cses6bYvxbLny+Uu7uefIQC0IPnJySml3J2LP6nGrFNC1AcqK4lEnLFwBJ/PSG5e
      PnokpGVcSECWSqHLcPFovgO1Ro4SOV2djfiSCnIchWhS0ONP8Qf799A5NEqpzYpBkaR1eOX7
      x+UaMzk2IxcudVJUmDnLqhCrM2M0Ho8zMjRyx3QjQyM0XWma9fnt7F3CXK2+GYo4Ng4AAAg2
      SURBVAJAR0FeDkWF+TS0tbOlcg1B3zBDYRNaKURQacClVrGxtBSl3oR6mVfRMJss5CpMaJIB
      FAYn2VYzna1X2LV5B7393azZsBPJ4MZuUFKcWzz5utzc5c3XTGK+Po5c6mbfQ+s4eblv2gYZ
      LVfrGB71ofWOIamtOC0mQn4Pw8EwPf095LvzCA/r0ciSGJhfPfZe/8buaeum+fjVWZ+/UfKs
      JCkhoVQoUWk1MwSAFCM61s2hS3JcqU5afOXYJImTZ0+iU42zY9tTvPfW/yZ7/XMc2L5l2TMb
      v37up/fs5cT5oxx4ZCfxRJKOwRjyaIiekShDDRdYs/5zrDPO3ee73NQZbv70j38fgDU1Nx+/
      sSpEOCnngw/fQp1QkErBK198me//+3+l8om/pLvlMoMjA0SaD7H5ia9SqdYxOjj7N7aViQt7
      tb6xmy43Ufdx7azPv7ztGwCEQ5F5lTwrQUpIqDUaDDYTyusN5ekBkEqRU1RN87kz9Ga4eDZD
      yYhXidmooqKgitpLJ/idL3+Dn3z2GR8nxnly1+5ph1hKKSbO3d5+ierqqSuXxVDw+NZHOVN3
      ml+/+z2yv/HX2O7hefkpmQqdWUNiJI4MOW3Np/GEZXjHBolh4Iv7X+DYwGne+Mf/wrPP/wm9
      v579Ait9rnoFc35/kxISGq0Gvd2MUj31ApkeAAo1w95+Ht66k+bOdjqGPdjUElUVm9HLImzb
      uIeEUs5v7X8aX2L5rza1PElVxWbCvl6CIR9erZWKsnUUFhbh9080LCuL15JpySLzHr74AfSy
      KI/uehqd109SbSEZC/Af/+Q/My5TEy7OB1Ls3PUwFeVrGO8IMX15J2EhJi58LQa7GYV65iGv
      GR6VsbZ8PQBO+82ZhqZpU6xNrMRogSnDMXHunJt1Wat5YsprZsbEPZ9mownzKld/5sPqcJOb
      oWFcdaOBPpFnHWC9vumt3WbDbrNxqWP2b39hblJCQqPTYsgyo1DNPdYrRoKFB0YqmUKt0qB3
      mO+4NdINIgCEB0am2wHSwl4jpkML9xVPWz2vvvYuM433zjblGSbuC5ASElI8iRRPkopLpBKS
      KAFWWiQYnlf35kpLSQk+PniYbKxc6bzKuoI1NPdcRa7OIBwcxGFxMBCKse3atbtb8W2JXLna
      TY5OxRhw++SbVDJFKnFLESCTTQwOy0Aul4FSjkwumxIoIgCW2E9/+EMe37edtz9rmHEqRHd7
      D3VL0L15Y4lC2UiAyz2tVOeW0NxTj1qXRTIyiMWSR7fXO+8LdrS3k89OnOSxshKOtzSyrmAN
      HYMdpFR6ZLEgkViM0WiUYycvkFN4553aD//q34nbN9J48gPaeuOUWwwcbTiF1ZKNXKZEm/Qi
      0zhoGgiQuYCrsGpNHu+ea+WxGZ5TaJSgWthebSIAlpjRYKCprp2irOXdIMOeV47nR69iznmK
      y60XqMotoSArl6NNVxj3tlJZYaF/tHveF6wtr4Q8uxGfP4BBFqOxrw0JUMjkZFntjGMlRx1B
      ef1e5DuVUwU5mZzwJEnIY1Rl56KRp1AotWSo5FzsbmNbcRktQ700XbnMjpqJPYHj8Tg+39zL
      IcrMTg58zon3+s3wt6aPBoKzbow3GxEAS8zpclFUaOfdXzdMmwoxn1Uh5qvh5Dt8cGWMncF3
      SGmzaO1vI5WIIJcryctyY8jIIyc0OnnBbnQZ73jMb/7Zn3Ppo1pe/txE07DSXTwtzct/ODHC
      e+mjubtpba58nJKe0agKWXSErlCETEs+FoOK4uwiirJyiSUSdPQMTwaASqXCbl/4dPAbrwnr
      9ej1d74JxuPxTL5GBMAS275rFwC///LNasfdbJBxJ2t3HuDtnQe49FEt7sjNi/HW/dWzizdM
      XrADLX3LkIvZmfNqeDwPHN5nqPu4lnwd5F+/tt3XP5C1Bet5+XefX7Ivhvlc/AAZGTcHtUQA
      rKCrl+touNBCT3cDSq2F4qxsrrSdx5rhos87gtNi5eLVZnTy+3vP4XvRlfO/oXM0ij7hQ+8q
      pe9CLVufflR0g66kNdVraG++SEGWm3MtdSQjAwxHxmkYHCHu76BxeIjjH7xFU//ClgUX7qys
      vIzx8RiBpBpPVxdGnQGdM1cEwEqqv9yIzGjgtcM/ocBdTsfIMEH/INL4ECf7RtlZsp78skoO
      /fhfGVn6DSXT2ju/epvcnBxMihj2/Hyy3C6Gr50VVaCVVFVdjSVqZq2ibPKxktyJeVdPbJr4
      /cCB5zlw4HkufVQrJsMtoS9/7ZXrP03dc0CUAEJaEyXAMvD1XuP1WQbChHuLKAGWQestA2Gv
      HTwnLv57mAiAZVCyvmjaTvHCvUlUge5SOBwmHJ5lgSuNjeef2jP5a6FhYvTR5/MxLkVRWGa/
      de3GoNBSp/OHAqty3vmkW8wUEZVqcbcBylKp1OSoy+HDh8lXuLBqFrizX5pIFKmor69n7969
      d/X6W4fgRbqFp1sOogRYYVH/IAc/PYIjt5D69kE+v3cDR8+1saFQQ0/Ixp5t5djt9lnT5duU
      jEZlPPbIrjnTlbg0jIQV7N2zbcZ0u9c68CTduGllUF/F9vIs7HY7Pe2NHK+9RlleJp6wjOKM
      OMPyUgaajrHj0adxZ1nmSFfEaPsZ1m55mOI81+zpUnlEBy6QyKzi8YcWthXqUhNtgBWmMTux
      GdVcbewjR6ciZnUhRQPk5DnxjgTvmK68rJDxWPKO6UrLyunt75s1nSXbwoDXR1tLM6PB6GS6
      3MIyZIko3Z4QiUCQQncWA2M+IsEgXb39c6cbaKO5LcCQZ3TudIEkkszAnu2re/ED/H/KF8jn
      AcelsQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Max Backers' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dd3Bc92Hg8e/bXrHojeiFYAFBgL0XkerFkhxZtmUrxXEuuRTncpPJOHdz
      kVLu4ih2FMWJuyyJoihTjRQl9goSLAAJgOi9A7vAomzD9t13f1CSTYuUKIkSRL3fZ4Yz1OLt
      vrLvq327xG9/kizLMoKgQJIkSaq53ghBmEsigC+YeDxOLBab6824ZYgAvmCCwSAul2uuN+OW
      IQIQFE0EICiaCEBQNBGAoGgiAEHRNO/+Rfx72BeDLMvv/RE+3HsBRKNRxsfH53JbhJsgHA4T
      DocJBoNzvSm3BEn8KsQXi9/vJxAIkJKSMteb8rknfhVCUDwRgKBoIgBB0UQAgqKJAARFEwEI
      iiYCEBRNBCAomghAUDQRgKBoIgBB0UQAgqKJAARFEwEIiiYCEBRN/cQTTzxx9U0yJ/e+zOlL
      TcwEVOTlpCP91p1aztWgy8zDoL45G+Gb7GPH86/S3tVB1B8iZk0lwRDjbPVFcvNz3rf89OQU
      OpMJFTLdTRc4fKIGrTWd1EQzAK6xDnrHY6QnW667zsZTB/CZs0k26/DaO7nU5yM3TcPRA4cZ
      dsUpmJd61fL+6SFaBqbJSrNx7I1d1NQ34Q5pyJ2X9r7j03y2BmNmHno1BN12Xt39K06crUNl
      TWdequ0TH68PEolEiEajmEymT3U9c21quI0f/OgN1i1J5u/+5efEtSYK56Xzw799kuxNG7FJ
      EV740Q+pbWjFlqDm1Tf2U9c+SNTRzL7DNRgyivjR0997UnOtB+/uG+GxP/sr3nr+GXrmpdJ2
      4RQLV92Gu6cWlyYbW8CLf2aUo6drSZ2XTnjUgU9j4Z777sCg/u3T4cPNTg8R089j2x1r8PQ0
      MeueZO/xU1xsdJBui9PYOciSddsYrD9DcmE5r//iab7x3e9RZnbz5uk+/uxb93Oxvov6iVHy
      0nW0tbVQXT/F5J1bqMwxcLC6gc3bb2N2JkBxcTbIUVo6LhMYU1P8tTvQmS2cPH6AIuYx6FOT
      phrnrTdbCalTWFSUQmFOFnX1lxj2p1K1MI/uPju//52/5PVnn6EvK4mWC9UsWr2N6c5z+Ay5
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAHSElEQVR4nO3a22+ThwGG8Te24+BjziecQAhQWKHQ0bXQVqCObWUXE1OnSdu6A7vZpP0x
      u97VpF7sbpOmFVGtjE2bGo6hHFIo5ACBxDknJM7RdnzYxaYNtKksE8JB7/O7/GTre23r8Sf5
      c1W5XC4LMBWo9ACgkggA1ggA1ggA1ggA1ggA1ggA1jZtAOnhId17mNbjNykK+VWtrOWf2TnG
      R4fVP/RAy5lFFf55O6RcyCmzlH3icf/LrZLHH1Ncz2lyelblUlFDAwPKFUpPfc6LZH5mQiPj
      008eLBeVySxXZtAXeHivX0MP0spkMv86Vi4VtLj0j62hSg17mnMfnVE+HFXg+Dsam1tWWyKg
      8YeDmi616Mgr2zQ8Oqt4aF2FqqBq4o068KWdGz7HJ5d79fquFn3w8VW9/bU9qsqu6fqli4q1
      7lNtslr7dndqZGxGN+706xc/fV+XenrUtDWl8al5pdoapIA0N55WMBzWrc+n9OP3v6nzPRel
      /IJW6vYp0XdFzd17NTQ4qLmJtFraOhSLBjX1aEkr2bzu3u7Twb27lGzfqWRY6ti27Zm/j89a
      YXVW5y70qXtrnZRfUnp2RS0xaTGb1+jokr598quVnviEC9d6VVsOqqcY0aHdrYq3bFO6v1fT
      K0HVR0KbN4B4XaMiNWFdu31Xg/cealdnSge6kvrwD5dU9ei+ZnIlhYNb9HJ3kwYnH/1fAYSq
      a9RYn9TESJ9GxhMqZvNqiAR0/vx1vfPOXv3uj5f1/fe+obHpSeXmHmimGNXE5SsK1UbVf39I
      iWhAwaqwAvlV1delNDd8R4vZnKZHZ/TqnmbNzd5RU3OzBi+e04Ki6vngtzpwZKcGMkF1NgTU
      1NKsiYlZZZYeqTrW+UIEUC7kFKrZos+uXtFSpEFdiYgmA9LoSFpdO16p9Lz/sDAzqe4jJ5Qb
      uKWzfz2v9vprirfv1ditPynx+jFVbda/QvT1XtBKVUwdDRFNZdbVUhtSZjWvZCKpYDCg9MSs
      Um1NCpayepQNav+e7g2f4/bNXi2sBdSdatdaYUnZQo0CuTnlCnG1tiZULJc0ObOoeE1Qu/fs
      0s3eXjWnOjU+Nae2uhpNLpe0tTEplUpaWc1q967t+rT3mrbv6FJ1vF7xYEFXP72hPfsP6N6d
      W+rq7tLAwJCaO3YoWi1ll1cUjsU02ndFO46d1Nb4pv0+ekxZI/fuajJT0M5Ug0ZmlhUL5JRX
      WPW1DUqlWio98AnpsbQ6Uh0aS49paX5KkcaU5tLDisaCOv370/8OYHZ2ttJbba2urioajVZ6
      hpVyqai5+czmvQIAz8Om/RUIeB4IANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANZClR6wEaXCmn75q1/r4I52LRaiuv/5ZX3nW8f1l741/fxHJyo9b0NK+WWd/fgj
      rZcatDQ3qLfe+5m66jf3x5G+c12/OXNBP/nBSX145m/6+tv7dPrPvYpVF1Qdjul7p04puglf
      wo2ec/rk1rjePfZlXbrer1M//K7Gh27q3GcPXqwrwMj9YTW1NqlYqlEktK72pojOXupXcyJc
      6WkbVhUMKxlN6qUDe1XXuk2tiWClJz1VQ2ubqnPzWlZc7Y0J1cXDevP4uyoXiyoXc8qtFys9
      8b9KbevU8vSoquINKmZXVSqXNLWQU2JL1Yt1Beh66WWdSNYpXF7XUjGi+BuvKZstqjocrfS0
      DStkV7RSCimamVZNJKpsvqBIqLrSs75QTbxW+79yWNtba5V887BCW4I6uLVB0dwbygViqt2y
      Ob9PE/XNOvTWUdWFCjp89KjmFxb06qHX1Jy+r6pyuVyu9ECgUjZnssBzQgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw9nf4CwA088jkCwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      e4dbPv7vGb45cn6T8wAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      +/Y2yCCXgf8DW9eEw9LCc4wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      uuPp7Eh5ziWOnUxAK6jw9tBQl3+eg8fjycirxKtdO5Syv7r4Yae2KINjMbFUNEtp5+WGriKb
      I9EnSc3IwMk/Ao2jCGNjOTklDXi6/eSMNDZWEHv8GFfqIcjXmbS46D+eu4jEDrh6emPO2s3m
      y1q8Pd2pyzjB+r0Xb7i5zbnHmbfpzL+z3v87CBY9h3cfwqpx59Ku5USdS2fvN3M5Ww6FMZs5
      mlFFfnw0x9Lq8fb2Rin76THVXI5m66U6vLy9UTlKSD28lg1ni6k7v57vjuRSmnaMgwmFeHt7
      4/Sz066zj29k1YkCGi9tYdmhdOTO7nh7uVNzPoqD6fXkxm1kfXQGzYWxLFpz4qbI3VyRxWcf
      TeVYZjU5cfvJbnSg6MwONh5Ju1ZGoXbBVaZj98a9aAUxNfnnmf7qZPZebMmMIQgClw5+x/Q5
      66m/FtEgsGXZQgprK1i/bA1F9TXsPXAMjYuC7Su+4lJxNee2fccViwfenm6/3lP8JxAMdRyM
      OonIxY2Y77/k1JUG0k7uIbbYhLe3N3Ip6GvzWTlnCl9ujP1ZTQuH187jbLGR8+u/4EiuASdX
      zz9WAKlcTbc+g+kd4Y9feE8G9+uBRiGhIjOW6VPfYvOJLMwmLUc2LmHKe9M5drkEq7mBPSu+
      4p133mNzTArH925izfotZJeWE7N1Ke9M/Ygjl4opuXyIr7+Yzdw1h/mnp9wiBzUPT5jE/XcO
      oW8HJSVXCsnONjDsvjGM6OfFoTNplFSV49+zB+GduuHj/ONUSaCkKIdOffrRMaIbPi5ybFYr
      Khc/Aj3lNOnNVBfX4de+B+HhnQjwVF8b9Ww2C0qND4HeKnR6Mz5hvejbJZBcgw9Tn7wNsdWM
      zMWLAD9XmptuwikSgpVzcbHIXJSAmPDh43l6bCRezg6YDD/F5ngFR+BkbaLHg0/R01NGXk4h
      /qHBSIUW+W36AmKTa3Bz/Plm1CaSiuq5976HCBVnkFfvzMQ3pjJ06AiC1SZKKiu4kqem74BO
      dInogPpPrqT9HJHCg6cmvcy9Q4bQs52FonIDpVWldO3Ri45deuChgOqSAmS+gWisv6xrtVpx
      8QvGSy5Cb4bgrn3/yuqVmWaHdnzw0ZMc/nY5CUd3c6zEnWnv/R/bli+kqqIcWefhPDO2M9s3
      7yVy8GD63zkSaeEp9mcpmDl9ErtXfMWV3HSS6t14dfxd/9o5YpaGK+xNaCJyaH+GDPHj6/fe
      YfPRZKrLKsjNSSIt9gCfTp3MvrS6q0FtBvJSC8mNP8SnH7zJnsRilC7u1Gec4GBKE50DXSgt
      yuHChaN8/cm7rDz6UyiEXOOOLieWA0l1dAx0QwQUJh1H3uluvBxB4eaLPj+eqLhcwsJ/ncX4
      79JUcJas5jAGdfnpsOjaolQyi7TYhZ8Fp1mqORmXx/A7+4NITP+Rj9CrvXtLR7GbObFtD30f
      fQTnX5gwZjQqF2QOrnj4OGC+GiJRlX6QVG0QfX2VpNQUcWrHSqa+8wmpVX9fwc01aezJUjO4
      h5iClAIuHN3Bh29O5nSRkeAeQ7lrYKf/WuERcHH3IuPEHi43ORPo0hLH9BdU0ZH2oT44Ojvj
      ZLdQX1nExaMpTCtPQOYWRmN1Flu/30dYB18E6U9vCW11Mckx8XxYl4zELRS72IRfUMC1zGn/
      NKbqLGZ++g1j3vyEAQHu8NQH9H/cSsbezynXB/LK+G0glmBOWsvzu+IZ1fVeHFEw7tN1jBNL
      qD2/no9iT1FZH8O9ExZwj0siz30WxYKFC7jfQYyh8hRTph/EMjwcR0kzp49GM/LF+TzglcyL
      n+zj7n7Pc+n0RSIfexKA2N1x9HpqMo8EG3hp5gom3N+zVeXdtn4DBYRSm5yORR/PU4MD8Akf
      xMsv2Zn8XSzNjw5CCWhzL5Dv1ZfO3r9ON6CtTGPLwUR61FSQkpnOpZwK/Lr7AI40GRoxW+qo
      LrMQ7iChIvUgn/9wmTc/eh1/dyVLt2xFLJFwbNEUEpIr6T7yr3uD6/PO8fmCLbw25wvCNHLe
      WrYDkVhCafQcZh9LZdBz/X5dSV9CTEwNExZ8hUviAj6LSqTXi/+tJH+B4B630zvHQu8+HUi+
      YkDUVI/INYj27mKOZZtw1LjRdCUdh1H96du/nj79u5KU1YBKYr3+j98kbMZ6lk6bgjboAbQ5
      Z0iS9caYuJ0LJn8K4yoY+14wh1Z9TZkyiMbUM4x9aCbawjzMSjVpezaRrwpEl3qeO0ZNJqyy
      ml1RG6iUFBIxbByJe5eSo/dAXJ5Ex3ufRFuSi1ntQ7fevdm4bz2N8jLC7rgPtaWG3CIPxgW1
      xCH1HNyJNdF72eGmJyR8SKvL/OBLH1DbZOaQORFdRChpu5cTW6tBUZdBt97DofoKGVZvKKgh
      KDAUx98w01Uenfj48xmYtWmcO2cmxEtObnI2fj060CfYjU3rVlMp6ckodTnvvvIlPZ+cQMaZ
      swhdg4jevR3f0E6cyRN48uG/fkqktamYBZ98jqjHQ5RePIrc0o2UPTsweAdSeLaA+1+N+JVZ
      U5aVhYOfJz27y4nasA5JYTbDxo1HVFd5Y8ugzdVXKLV50cHHiea6Msp0MsIClWSnlhDUsT01
      hRnklDYSHNGDQBdITU7FInfHQSama3tvLiVmEdA1Alt1PllFdQR26om3TEuFQUFoO/fr3b7V
      sVuMpCcnUKVtUUKfsB6Eudq4mJSOwjecru19MWsruJyajd2pHf26h3Ll5BEqPMMZGKgkKSkd
      NP707Nweia2ZzJRkGuzO9O7dBamxntSUdAxSN3r37kzl6X3kuPdmWAcXslKSqLM60bNXV9Qi
      I7m5lfhHhCAHBGszWakp1Bgc6NKzO66Km+M5rirOxOoUjLfCRMqlFAwOrnTt2gkqjrMrM4wH
      eyloQEWA10+rfHUleRgU3rRzv5qsxdJEdm4tQWGeHF+5m64Tx+PVWM6l1Dw8Q7sS5GLlwplk
      WgwdOeG9uqM2VJCcVYJHSGc6BXm25I/6C1iNWlKSL1Gvb5k5Bnbpj4+kjsvp+cg8QugdEYBY
      JMKgLae0RkxYe28u7NwBg+6kq5OdlOQM7M7+9O4Sgtj8G6EQbfw2DbUViGSuaJz+XCaihqoK
      RGpXNMqbdOxRK2GrL6Fc4ou/85+YkQlmiovq8Avy+Z8+D7q6ogyVixdK+a9fKm0K0MYtza9U
      wm63t22Kb+OW4VcKYLPZ2oLh2rhluE5WCBv1ZSUUlJRRU1NDo96ISq35w4MvaqvKERwULfHs
      gkBNeQUoVDeYSeKfw25sJDMnn5qaBsQKNUqZFMFupLpKi0KlQCQCu9VIda0WpVJxNcW2gFnf
      QH5BEQ0GO04qJWKxCEGwU19Rjk2uApOWosIiarUmnJydfpE1QbBbqa6uQa5QYjM2UVxYSHWD
      ASeNMxKrgfyCAioqazAjw1n19+cMJn0jjc12lHIH9PWVFBaXY5UoUMulWPQN5BeWIjiqUP4s
      VLuxtoLSai0qtRqJ3URxfh6V9XrkahUyiRhBEKiuqUImVyL58T8V7FSV5FFWq0epUiMRzJQW
      5lNeq0OhdkImBl19JflFZYgc1SgcpX8rLMbcXE9+XhHNdgfUSkesJh3FBYXUG8FFrcBm1lNc
      WESz4IDTz+ZeFmMTRfkFNFklOKvkmPX111OAJja+O4nDlQpMdSXUNFkICgnlN+YS11g26z2E
      0EEEuynBbuG7D2biEDmYAGXrpvn4u9SdW8MrKxJR25vRtAvBQylwYe8SZq7N5u6R/ZDam4nf
      sZgZW9J4ZOTAq2lR9BxcvpRThTXE7d4EgQMI9VZh0RXzzsP/QT3yCYqiv+HIxWKSj++iVNON
      bv6aqxs2LOSd2c7EuTu4b/Qwzkd9y4HzhaTF7KRQ1ZVweyqvf7kRqWDBrvQixNf1b8ln0VWy
      +vOPOVHnw5AeatZ+uYDMwjz2H0mjZ2QvopfN4URqKrGX6uk3oDOOYhHQyJHlizh6IpYqRQiK
      /D2siM6lIPEgFxs1DIpoR032SR57awEj7x6Fs0IKCNRnHOLdBTtoqMwhR6dCU32C5ftSKLkU
      TXytMz38rCyau4DSxnLi4kvp1edvnA9ga+LwyuWcKqjkwPZ9hEUOJGnHfLbF5nAmai++g0ZT
      eHg5m46e4+SpdHoPGYhKIgKhmQPL57IroYjM+DO4de9Dwpb5N5AeXSZn5KPPcXf7ls+C1cD5
      6L0cv1RM5H1P09/fzv4d2yi2+vKf/zwCgpkL0VtIlbrz0GMPMWD0XfgrHChMOsru4xn0HPkQ
      Q8LE7NkeS7WuAnnQIB4f3e/vOyT+FDbycjN54OlpPD+wpaPVpR8jNk+L1NKy1FeRdZa44nrU
      hp/OBkCqZszk9xgDXNo2g4PphYzs4sylqN3UKbwQAyOefJcRQO3p1UyJSeXxgQFIAW11Ovvi
      i3CVWgARQ8a9zRBAf2E9E6Muc9uIWrrfPoYXxg9tFQmTThyksllCSyJyF16YNgtL0xVmv7eM
      ioY6Ygq0zP5iOqtnTCe34n56t5MBGsa+MQPP7V8Tl1/F40+/xKxh0JgRzTubUqm7K4BdBzNx
      0fz8VHsbaSej6PHodCb3bGDaZ0e4Z+5rfD4YbPkxPD//MhleudhDxvDqhGG/2dY/hcSJe16Z
      wmi7iYVvv0Vlo57y0ioG3DsV254ZZFTUUXQplUdenkXB+o84m2Pk/s4KaK4gMdnCM/PexuXi
      Yr49kc/MCZ9cPxTCYtSzau5Upk6dyu5zhejqCilscuKBQZ6sWLyVMwd3kar1Y0gHCedzq6Gp
      BofAgUQImSzbc57Y3fvJuXKWhWsTGTL6dnYvmk9xYxkbNx+my+13UrxrKQllf/+5/CnsRnJS
      Kjm97WsmTZ7KqYwqXDveyWvjR/Bjog+fiDt5/rHh/NZxFYKxlv2xlUT2CqGuMJVkeyDDO/x0
      wLTFUMOOg+cYPbrvteVBZ6+uTJj4GM4/03SrsZ6tu2MZPbY/tUWFpB7eyVtvvMaqgyl/W8Te
      o5/i/ts6/OybJg6u3UyVwh25oMVd7Y5U4oqbF5gsP4Uqlqansv/kFTSeVz21gomYIyfp0acP
      rk7teP7Vl/D9xYnfEjoOGsbFLYvZuPcYeQXZNBr+H3vnHR9Vtf3tZ2YymUkyk95775XekaKA
      KFWxgXBRbNeGYhcVCyggoCAiUgWkS6+BJEBIAiQhlRTSe6+TSaa/fwQRxXsRQX/385rnv0zO
      Pufss8/eZ++11/ouAC3HjxwnfGRvjFsbyMqO4YM3XmTJptN0au/Q8KhXcenwdrLbjTETivH2
      8+H494s51eRELxeQikyRm1lj72xKR+e1XASm9oT66dn63VqOx2dRXV6Lhj+QJ1gsNWP2W4tZ
      vHgxk/p7oFd1kRkfzeELuWhVKnwGjMJZk8UPP52jvaUdvcyJsEAP3JwcUCq7Q+VbqktQOrsT
      5uuFJwrKFeDg7I+Xjxu2Eh2qO9NJun0EUsa8uohln87n5Qe9OXbuEgKR6FfzdaFQ9LuKzuq2
      ajZ/vQyPSS8y2MeEM/v2ohEIKayqoSC/kI62evZvXo826gkmhNtdn+sKBCKENxjLNcpGDm/5
      nraQx5ka5UDomGf4cvkiPnj9X8Sf2nPHVRSJfjvPljPhhbcY59PCycs1tCnb0evbaW3SYyT6
      5cZcgsN57ZVHuXQ2BqW+i9jtq8kzHcjjYyIQCoQIb5q6CLCLmMwnrz1BrwBvTG1dkBl3cX7v
      d6QJBzBzbBRigRTPkJF8tPATalN2UNv6HyUU/hhCCX0fnMmL46w5cDqa07E1vPDpMuaOMmXD
      yXw6tSo6Ve00N3RibHRtxBHImPD8W8wYPxhvFwtsnWzRtZbdvjNcS8UVGoz9GRXhgcagprq4
      CKuwe3l8XBCXE/PQCwQ3LXCsXP2wrCkmPiWdAsxxl3c/uP+zZbG2i0sxMWQVFZOeVYmnu9st
      i3S2tdDe0cyRdUvINenLAA8pjW0qggaOxdNch0qjRa1SEr1lJRcUjowId6apqY3OthYUnb91
      Btdzdsdq4hpsuK+3K42NrRSmJpCUkUNOWhrWTkF3ub61bPlmE5czLnOlXEeobyCuJhriE85Q
      IwjA1VZMS10Tam0dsVu3kHY5Ewc3LypjN7P+opYxQwLoaGzlt84rmi4FLa1K2grOcTy7iZLc
      dByjwlEk7uSbuBYeGBWGsrkFm6AILFrzuZJ5CZ2xJ6bSO5DKVLdwaPNmErLyuJjZQGhQMI62
      OnIyMricV42Pqye+LtZcSDhDWo0NoV4yFE1NKDUdJJ88RGW7mnOXmrhvgDv71yy71SJYiNTM
      EmcvHyyuzQXMbFyQdpXSIA9meKgLwRFhNOQnc7VFzqPTx+NkZY6bhxdWcjk2ji4EeDvhFdaf
      fl4SUi8XM/LR6QQ7WCKztMXTywVzc0ucvbwx/zs3SkViXFzkJJ2OxdhnGJNHRnX7qAvFyK3s
      8fZ0QCQAodAYC2sHPDwcKThzmmyFHmMjEYbOJoqLiuiSuTOgbwT+fn54uLkRMSACbWMDWnUH
      pcVFKEU2iMsukKq0xN/RHARCzM2t8fJ0pLG6Dq1GSWlxMQqBJX37BlKZcYFylQ3TH5+I3PjO
      nQSNJCbYOrvgau+IpbSVCyn5hNw7jeEhzoQHuZN6uYR7pjyEn5WI2O93IBo8DFNtM/ltljw+
      ZQSKuiYMhi4qSoppaBPjG+iGGJDLzPH28kVZns7xlBr6DOhD+5UEaiQBPDFlKF319egNGipK
      imhQCAnt0x9vi07iU2uYOnsWblaSPz/4iSTY2wi5eDYBu/6TGN8/hOBwX4pTLyIMGMej9/jj
      4+dH9dU8/EZOpq+HFen79lNj506omxWXL1zE977pjAqUUVvR1hMU/0eprSpGJHXE1trk1gff
      QF1ZMUIrB2zldzc16F3FoCbvShk+Ib63ZYxob66ludMId+e/35/rdigrvoqVvSdys5u/PD0d
      oId/NDd1eIFA0KMK0cM/hh5nuB7+0fwvC3r10MNfzh9c8zTy6lNv8PrSZVnTWgAAIABJREFU
      NbhZ3R2XhpXvv4B1v5EcSczjx0Xv3ZVz3i661gKmPfU27yxdj33DKT5cdRSDpQ+ffTqP+vjN
      fLU7EY3aiNeWrKSXowTQkHZ4Lct2Xsba3pV/zX0FRcJatsVVomxrYdp7y/CsOMLS7WexsLBj
      0ktvM8zbEgHQVJDAgoVradJb886Sz2g++y3bY4vpbG3jgTeWMMQ4nY+X7kQH9H7sTZ4a5X/X
      61uTdZR33j/Hx/s+pWHvGr4/W4BGqWD0jLd4ZLjv9eNyo9fw4v42Tn49h9XvvsfVVjXGPvcx
      f+5E4he+wLpyczw8vHnluafwtP1lcV+TupcXP0pm6Y5XOLb4C/JbdaTEJ/GvL9bjkL2Lndkt
      iM2c+fDD13D7s2Y/nZLo9V/xU3YtnVorPvp8Lvm7lrPjfBVyG0/eWPA2rfE/8PWeBBCKefzN
      RQzzll+3OnXWZjDh8c9Yf2Qr1UdX386i3wAYqC1M52JWGb69h+IjV5JRqSHS356s5Dx8e7mR
      HX8FhZEOC4EIpU5Lq9qEe0b0RaJu4VJiAg1qM4aOGoEBMLX1Zvp4N7SKaqJPJyJ1DmJguCfF
      6Vm0ahU06yzwMe+koFZH30EDsZPdvVRLBoOO0/uP0SboAjpIOHyMCa+vwLD/PZLyWtBeSWPQ
      E28ScOVLjmfU08vRFVTNnNyfwdNffIt34Va+i8vizQefJmqSJc1nv+aj6AwCGk4x6aUvGG59
      hcXfn2TQx9MQCyH9/FE8pr7Jv9q3sT+pmJdHzyLqAXNUKZt48aeLuIZnYtP3MWZG1bB0/4W7
      3gE6qzLZvvMEVWoTulUhHmPpRAuqLmzhm/gL1zuApq2Yw8dSMUi8EQhlPPHmQkxFVXz0xkZq
      WsaSU2nJxyu/JPS3W+TqZk4diabZYI+xqSPPf7Sc5uzDLLLtzcQoa5ZubOLllUs4+d4rXG1o
      //MdQCih/0PPMWy2KavnvkRhST5x8W3MXboKk/jFbI7LxjgugafeXUq4rRaN0S9WO4NGwal9
      +2k3NgPaiTt3+famQF01WSz/bjc6Iw0rFq+gsiCJb3bGoe5sZsOXG6hWXOXTT9fQIdBwcMVi
      Ygo6KD61mt1JVRQkx5FZ00VxzLdsjC8HQNlQxNYjRzi77itSmyUUpJwlt7yU7cs/43yFjjMb
      P2JHUg0l535iS1zen3tgv4sBZXUyeRp/otzMABXtDRa4OslwdjOmVaEmMDiK+C2L2ZAiZlyY
      bbcqhNgUL08J50/FkHYln4K8MsQWNkiFncQn5dMnwgc/eydSk86TdjmD7PICdNdCK5TKJtyd
      HXF2daOmuQ2ZhTVSYRfnEzPo3T8Qj+C+NF7awufrztJ/9IC7WNdujG39eO752bjbSEEgwMzK
      GhOBhpyMItx8f3GZyMxow2XAUBxNQCAQY2UDe1auo8nGE7lBQV5zHls+eYOPVmyjtuOXDb6c
      +CNIgkZ1n/8axw/FMXj8aKzklgwdaM3X816nVBaIn+0fF1W7CYEIc0tT0g79wIUmCY429jha
      d3I+7ixpOcUUFaVRV6Di5LYVfLh0M3U3pOiqzk+myjSSSGcjwBRnO7P/3gEMei1tCiWgx2AQ
      UFeWSaddABPvHYNdYzXF6psD2x3dQxnYNwpbG3OGjx7LgBA76poVSE2MKMu+TFltPXUtyhtK
      GOHTvy9VSYfJr9dgYiREInVk6KjR9HJxx7/3IPr5u9DUeve0cgxqBXt3nCJyaCiazi7aFF0Y
      BO10qQx0KVRgaCH2cAKPvfElC6Z5se6nlO5dUKGMCS+9RbhZO3pjM+Q2MoTaDhL3byTVZATT
      h7gx9snXGOoupstIhq3Mkp8NanoDKFUqOjsVCAUC9NpOkg79wDltP+bc50vioWj8ps7lkzem
      E3N4112r68+IjKWY3JCYwqDXcPHQOi6q/HhyXK/rv8tsW/GxN6VLqUTRpQEseeLdz+hrmkPc
      VSX/euUt5n/4Kd6tKZy63D2Qoa3nyJlKgt3lqDoVKDpUoG8grUJLH28HOhvK2JXRwtKVXzFM
      XkJ8Ru2dVUYood+kp3l1jIxd8bXMmvcqzkIFxjIpZhbmaPRaxsx4hWn+7Xx/6JpflaaB6KMp
      BIT70NXZSVu7hinPvfXfO4C2uZR3539BbXMFnWoHHJzcUdZWUNveRK1Wh5OZDFVDLXVNjdTV
      NXbfm0CEQNDt6CAU/nL66KN7CRr/JAN97H6VhRK9jro6Ia9+sYL77Ks5dr4AEHHX5fFvQK8H
      KwcLEvZvJSO7hMTL1bgEmZGRW0x6sR4fD3PExgI6lJ0o2lsQin/2q1GTfykJzyEP0FJQSK/w
      QNKPrONAmQMfvzYNM5GQgqwMLAL7YVyei8PAgdelA91d/cnPyiM7rYwof3cuH9nIgVJrPnh9
      OnIRSKQiOjs6UXe2odX+xb6xBj1XT33Prjw75j3/OLZmN8QDFBdz5PBJirKzSM3PZPe2E7R3
      tFDfosPCRE9FTTNioZaWDvUvMQvqLuRmcPjgMa4WZJKWUwVVl2kx64+lzAihSISxVoNCo6O9
      rQuB+A7M7OoWTuzZT0WHmsqKZhxspGRfziZ00GDy02oYNXAYYf1sUSiUtCraMJNdmwKp9Yht
      pCQe3kPe1XwSLxaRkZn+37VBhSZyvCT1fLPhDNPmvkZkcAA+0nrWbznKfU+/yoCIYMwa0jiW
      UEqfvgMJ7e2LXiUhJNwLXUcXLsGRmAsUGNv5MzTEmdMHT+AcORQbS0e8HKQ4e/khl1kyoq87
      65Z9RYVpGE9OHoZQp8czLBSpph1rryDspHrEtu4EuFj+p1u9LYRGEgLC+zFkyBCsLSTce+84
      QiPCyNy3DnHfh3mgbzDBkX7E715HqjaC95+5l/xDe0jtNCPSU8YPq75CEDGNmaO9ST11nsKS
      PE6fPEFZuw39Iuw4tnU9JfIhvP7kcIqPbSOhzZJB/frQnPoTOfLBzB7rT1psLPmFV4k7dZLi
      dhmTH76f6vP7OZ6u4MW5z2P7O7uWd4xBi0IlJCTMm7RzMVwtyONsTDSXmyQEC1NZf8GIyeNH
      0S8iALmLLxOGDqSzIp7vt54kYtIzjO/tjVHTFZZ98yOeo2YwoZ8je77YiNmoUYwePIQhfUIx
      tfJi3Lg+CFrqUVh7EeVti9jUij4+pqxdtQ7rIU/w8PDgPx8gJTTG1FDNulVrMYRO4V9j+mKi
      q2Pjui043vcMj/T3IiDAm5hdGyi3GMpL0wZxYcMGyl0CGX/PPQwe0B+53IIHJ47ERtjRsw/w
      R6kozEZv6oa7k/ltlavKy0Jj446H7e2V+7vRVF3msiaAfh634bJhUJKamE/woMjfdRv/X6Eg
      8zLmHoHYm9/sxtLTAXr4R3PTZLOnP/TwT+KmDqDVanuc4Xr4x9DjCtHDP5pbBMQo2PPhayzd
      G0f82VOk5tTjEeiHxX+ThVAUsuyzHbgP6Iv5X2DIuF0Meg2FCbtYe6iR/v08EQF6jZJTO9ey
      dttuYpMK8AoLo/XSVp5ZsI5L51OxDYmi+fI+ln61jmPxuUQO6I9MLACDhpzYnSz8aiMp+Q34
      BQVQm3aYxV+uJS6tCL+wSCykAsovn2Dp7guM7B9+/T7q8qKZ99Iizl6Mx+AUibTmLO+9+wVx
      CYlonSLwszejseA8n60+Sb9hvbij+KDmIhZ/uZz9B/azdvV6pOFDKDz4Leu3/URqpZ6ocD/E
      QmjMPs6C5WfpPToKEwBtKzu++oJNB2Iwsg/Aw6KTbxbMZ0d0CvZ+YdgYNbNpxRfs+OkYtSJX
      gr3sEAoAdQsblnzMtp+iKTdYE+Qo4ONXZ3E0LplipQVukmpWLV/JgQOHqZd4E+xpw52o5JSc
      3fRLWwUFkr1/PWu27eXY2ezrbdVRncWH874j8MHhmAOoG9m5eiU/7NnPlm+/olTeC4f2lFt1
      gE4uHfiJAa9+y3NTh6POPUpsmZQBQU7UlhdR3aTETCbDoGqjpLiUdrUQc5kUHRLcvJzobKik
      oq6FTmUHArQ01NZTV1OLTmyKqUTM3+F1XZFylO/WbqdIHMSEewIQ0e0GoRZbM3XaNBRJP1Fg
      7Iug5BQOY95i3r/ux0lu4MDG1QQ8/BZuV7eTZzeacEcJdNSw/PNdTFv4Ob4Np0lslZC7ezuR
      cxYy0SaXtRkSgiSFrP52I1da5TwyduD1+yhPjaPW60EWvDoTH3szipLiUPlM4N2XZ+Bnb4ai
      MotvV33H2TID0yaPuDOriokVg4eNoLevObnVRjw5dSjGUkfGTxjI+c3bsBsyFgdjJYfWL+Vk
      nhkTHxqMGYBejYWNP5HO7ew8U0mkcToH2gbxVC8lh3PVuLdf4nhbGIteexhjgRE2NuYIBQZq
      kzazp6k3n74yFZnEGDNBBefSZHy26C36Bbli0GhxjxzB1DFufL9oDwPGjuDPW3n1pMft+qWt
      zAToxQ7c/9BEBBfXk2Y+gignAUn7v2fT0WomPvUAVgAiU0L7D2H4wBDS04t4fMbDpO7b8Men
      QAKhMSGRIeQXZ1ORvI+Fa3ZycOs3bItNI373cn44cJrvvlxLaVM5R3adoLzyCks/W0zcyV08
      /dI7nIvexosvfEZMzF4++mIDHZq/R37R1m8Ibzw/5Ve/CY2kBAcHYIyO2vYObCz0FGcUk7B3
      DYu+30drp4jwqFAOrf6MI5VODPG5ppAgMkImUVFf10pLYxWXcqqQmAppaGygqbmBq6l5GDuH
      8dzzs3D6lTXRQFlJOmmxO/ng8/VUKdRUVuRzPmYb8xetpbpTh9jSkzkvzMHH9i4ZFA1aUmJP
      EDpmCnIjKf6hzkSvX0+RqTeu5noqLh5E7ToCB6sbrmdkjmuAB831Tcisbakvv4p7kB8urq5U
      NzdSUZqFVFXKgs+/p0Nsek3xQkdRdiZyQy1frthAi16MuryIjNxkPvxoERcKG5HZuePrYkVH
      VTkae1fuIEEMGDp+3VZqY3xD/TBDTVk9ONtKaSy4SL7KkzCf3+4bGShPPow4dAru5mJCo8Jv
      bw3Q3tSEmYkJKdHHGTn9DV576VnsjAzI3EMZNuo+HnvAn4b67oj/xrx09F7jmfPck4RZdX/Q
      g4eM46k5sxA0XEH1N3UAEwsrpDcpGRhoK0lmx96D2PZ7lBFBLvgMfZTX3nqDvuqzbD6VQOzp
      Ama+s5BZvbTsTSpFD2DiwIvvPUvegU1k12ixs3Rm2iuv05m8n0vFTchsLJGZmmNi8lutZB1O
      /iOYO+9NZka0sXhLAvYhg3j1tbeY3U/DF9/GIjSVYSa5e4HRyppM4kssGdP352wzcia/8g73
      2ORxJOYc8xfvJC8jnivp57iQWXG9XFnJZQq17syeOgwTMwvUag1arQa51ASJkQkd5sG8/fQA
      tizbTIMGQIiZTIbS1JsXn+jPj6t/pEXuway5c3n7qcFsX7GJGkUbsQd+4mSagpdem3FnU2O9
      4NdtdaaQ+oJkfjp0CosRsxjj1MI3K74jNSOFzJxkomOyrmfp0Slr2XuqkIcm9kcoUBEXE39r
      b1CdWkXsga3UW3eSe7WWh596HscaAV/+uIIqiy403kOQtpWSpVKgLk+j96RHALD2C0NwdCOb
      Nl0lr0XNCEBs9PfKX/0exTkXMLZwYsW8txENfowQOxV5RQ6Ul+ST3txGdS6MGetPU5kVcft2
      oK/sYPAoGyrysxDYOHH1RAx6S3uKMht45tkgspM20iwwpS63k9nzB/Pbtq3IykTg6kJDaRGp
      2c10lRcyaPIkWq5eIjO7AXVFHgMmTUIEN6ku3Ak1RRmYeodgJwG0tXz94SqkHk4UtzsxM7IP
      D65fj746mdKmNCJ8rchJTMMpUMT3H3+O38gJpGRfZXzf8dR+tJpv5QIGTH2BQAc7LNfHsGVX
      F3bhQzC0lHKl2ZjgUdMwWXmS7c0a7AIi0bdUkpGYQl1SPXa9h1ER+z2LN+fz6OQh5KVfwst6
      EDLJnxRU16h/1Vb3De3k8w8WIAwbR4RbJynVYby6cCXalnLefWsTgwf4UZ6ZgbGXP6bNldSY
      OBFkLQCM8Q/wvlVMsI6GshIqmxUIhCKsHd1xtjVHoFdTUVxIq1qMh7cnEl0bxSWV6E2s8XO3
      pq66Fbm5gJzMYqTyTjauOcIL899EbiTBwc6UyopaHF1cMPqb9EL1ymbK24S4O1qQGrMDI++x
      yLtKab8mT2Pv7oeVqIOi0mokVk54Otui62qlpKQCzOzwdbcnM/4EeudehDoacbWoEjN7N9zs
      LdB1tVFSXI7Q3BEvFxuEAgFalYKaJiWuTvZknTyGOrgPYTbGFBeXoZNa4+vhjEHVSmlJBVpj
      S3x9XBELQK/ppLKuDWcXhzvW2+9qb6BNLcH+WjrbtvoKymtbMXdww9XOvNu3Sd1BWa0SZxdz
      4jfvx+uxsSgKytDq9EisnAhws6W+vIAmjQleHi4YCw001ZRS1aLD08cLbfUVzpdoeeCeKBqr
      iqlp1eHq6YncWE9lcSGtamM8fDwxtFZSXN0CgNjMEl9PN4z/dGosA11tDdfbysPOlOLiEpSq
      7uHDziMAZ0sp6NRUVjRg6+FM7pFD0GcIIZZiaps7cXG0A0DbpfjrguI76vNZs2wttSod/iOe
      ZMb4KCT/A0bXtvpqjKycML3Nj1Fbcz0iE2vMpLf3arY0NSAxtcTkv1nO/q8xaKmracbW6RZp
      Q3+DStmOUiPEysLsL7u1u0FzYz0mcmukv5ObuEcVood/NDcNSze6MPfQw//v9DjD9fCP5r/G
      A4CW6vxcalVirGRSBFolOVeuoBabY27yn21ZGmULhVWN2Fj+j7oA6zQU5qZzJa+QsrIy2vQm
      WEt1XElLpaJVh621BXpVGzmZ6ZQ1aXCws0R4bddO01FP6sXLFJeVIZTZITc2UJqfSU5RHRZ2
      dgjV3eXKG9TY2Vv9JkGGhtLScmTmFug6W8lKS6agpBy12BIruQR0KiqKqpFYW9wVufjOljrq
      WnWYyyS015eSkZmH2kiOlZmEltpi0jLz0RibYym7JlWobSftYioFJaXUtulwsDWlICOVwpo2
      LKysMBJoKclNI7+8FStb6+4kKNfRU11egkBqjlhkoKEsj/ScUsTmVpgZQ1VhDlkFlZjb2CO9
      w9zQXc0VJKVkUFZWg4mNPSJVE5npmTSpxdhZmiEQCDBoOinKL8fUzur6s1R3NJGdnk6VwoCD
      jTnKlupbdYB2tr0+j+8LNEwZHkl7cRJz5rxIh+cIBvnb/cdSraXJLNmXwLhBve+oon8Zeg2l
      BTmU19RzcssaKizDEGf/yLaLLRSf2YvKfSA1Z9aw61INpWd2o/Qehb9tt42+Lnk383/MxsNO
      gqWzD8rcY3y1LQHj1lxSlE4YCqM5c6WavLg91Nn1I9jJDAGg03aSfnwj/15+mKkP3kdzzgmW
      b4nBzsYSU1tXHOUismO38fobuxk6azx3GvqjbChi9YfvktDhzogwE5a8NZ8GgTHp5y9hH+LP
      4c1r6Ohq48C+8wQPHISFRADaDrLTs7l4agfRBVL625SwKbqI+qyTZCrscWw6x8c/JGCuKuZS
      rRlR/k7XXBp0FCYd5LUFXxM67AHMO7JZ8PkmTEWtxF9R4SIpYvGK/ZiatJGQ1kZ4hPcdZQzK
      PraS1fGtOMuMcfCw5eiqRVyo0VGSEINp2FCczARUZxxmzr/WMPyZyd07wWiJ/mERR7LbyD6+
      C0nYcK4c/vbWi36piS001FCn1ZGfW4ynrzfo1BzbsosylZaS5BhiUoqpvHyct+e9ya64Kwhl
      9vQN9kOvaWP3qk/4cMk6Sps7/3SF7zpGUqIG38eUUUHo7fsza2w4zXU1eA8cRz9XEWX17TQ2
      1OHT914Ge0Ju9S/xyJXlRQya/DhTH3qIQCcpF+NjGfzoMzz5ynyevzeAAffP4tU5Mxnga0pJ
      zS+JJBRNV7lQ1IWDpNtc11jVSGC/STw0dQq9vG1R1RdxOb8eI/O7Y1HJuZSA1tgCFUBLPiXK
      QB6f+TS9neuIz1Xy7BsfM23KGMw6a2lTXTN6GFszauwghFpHnpkzAafwSXw0bw4jwl2pamgg
      J/MsYQ/OYsZTE6k6FE39dZXzWuIulGNj0v06FScdw/yeWTz+9Ku8+fRoWjOzMBswiRlPzqE1
      bxf1rb9Vy74dNFRUVDHh4Sd56KHxuBs1kV0g5tGnn+GxISbsjLuKQdXI6WMXEdpY31BOT1N9
      A0FD7ifKVkNpo46Jcz64dQcQiE0ZF6rmWGoN6Vk5+Pl6gF5DwrHT1Gq01OReIjklgxXfHODB
      l+dh3p5NbUURxxMvkrz1Y9LtJzFnnC9Xi6rvoNJ/AQY953f9SMCDj+BoaoSLXygpP37BgQIJ
      kZ7meHgFcGnXV2zPNWOYr7xbFQIlBRn5JO1ZxayZszmSVkRzZRVxu7/luSdnsvl8MXqgLOU4
      e1LacZTBzyssc7swZj81Cdm173F1cQ7RJzbxwszprI8twtgxkBmPTcZefnfMpb3GPsG4vl7d
      f1gH4yNN5+uvVhJ9voDaxhZAxZEtG6iX2mB8wxZcceI5mv2H0+uaL0dL4QV2ncnBysSEwN73
      cWnLYjb8cJDsulyU18c0J2a//CQuFt2aUc31xVw9t4fXn5nFZ5vPYNcrisaYTXy7cSvnchro
      VN9BQghdK7nJlRze8BnTZz7PxUY5UQEqVi76gp9iM6mtrCX13EnkUSPwsbpxmi7Aw8efuI1f
      EF1vR6RLd3TYH5iMCQkaOpS0DcvIVIfi7fA72/Wmtvz7+cmcWPUZB+IKaOpUA2pK8yoICw7A
      NfQeRvf2/vOV/gsw6HWcvtrOiAgnBKp6ju3LYM7CVbz/qD9bjhzm5IGLzH5/Fcv+Fc7KLefo
      bjIpD8xbxboVi1j49GAOxaUhtrJh1CMvsHLBI8TtiEGhA49+D7Jo/jTObT3Ezx4fv9VbHTrz
      fbZ++zVLFz/NxW376dLe3XwJv7qewJK5i7/mmScm4+8uw8nOGpAw6flPGeOs5FRG2fVD0xvd
      6dsv5PraxdKnPx+/+zzlMXEIQiewcvH7jBscjo1tAGbX/Z0Ev3JsNJZZ43/PNJYsf4PW2OOo
      HYezdNnHTBg7gABrO0zvxOVDaMXTy9fzzZLPeONBew4lljHllU9454UniPSywNFRz8Hd56mt
      uEpheQHpmWXdg5CykhMnynjxi1W8M8GWtUcu09Zw9Y+ttUTOAzAueQn52FnIm/NAZISfu564
      o/FI0vPpCojgXGopIyZPI37vIeoVXYCUiOEDWX18L1ZXNdRZRDJ9ZPgtr/V3odc30q4S4Wgq
      BbGegEA5SadjsCnLIyhyBvaqbC6di6asJpOIiOF01tWgMBZz+eBeWl3DaLt4hcjeT9OHdg4n
      xWIkysY96l5SD62jQuCOSXUCXsPG0dlYjUJqjc1vhKDSz+6lSO+BrC4R50EjMf5L98na+Wnz
      Jqw8Xcmsc+IZX/hu2TIC+4SRXqvjPk9baoorsPRyxeDpjo+9DDBQnrST/YUW+BhykYWEQMEZ
      tqW2Y9cYj+eIqcg0TdS0iHB0sPjV1fz63MuBHfHEGgzovAIx1Key89RV3ExLMQkbj+2dfOVU
      rZzYvRtZaAR5FxqIetyOM3t/oM3aj8QkNQ8vjMLE25TWpgpOSE2Ry6Q0V1UispLj62VE4ukY
      xDklRI6cwo5li261CBZibu+Ik5s7gcG96NcnBCcHR9zcPRkwMJLmijJ8+4+mf3gQkb5WZGcX
      EDRsHIPCA/BwdSdi4ChsusqoN9gzcnAUZn9tK98meuxsPXFzc0IkMsYnPJyuinyM/UYw5Z4o
      AiPCUdcWI3AfzuP3hlKeeJarejmD+wRQnpuNWcAIJg0LxskzEHlXNY0mgUyfNAgPFyeaKgox
      2Pbi0QkDaLgUTYbKCj9HcwQCI5ycXHFzc8HB2YXmsgI6zUOZPmUIJtcSdDi4uuDp5sjdEKCU
      yK1wc3fF0coKO0sjiqqUjH5oGsFOdjjbiskrqKPvuIfo62NB/A8/IR7QCy9TIfZyKRIjIeYO
      nmhr82mVePLw5FE4OjghaCpCZd+HR+/vj7oym5jMekL9XQEhNvYuuLm5YWXvibdFJ0WtcqY9
      Oh43O3uMNXXU6N148rExWNyJS4CRFFdnOQXZebgPnsi9Ub44OFhSWlxG1IOPM8DbAQdXN9zd
      3fEOCCQq3Jf8o0eod/Bm5KA+tJcXIg8dy6RBrmi6xD37AH+UhtoyhBJ7rC1vz125obIcoYUt
      1rLbS6zxt2JQU5hfhUeA522ZXzta6mnpEuHiaH3rg/8PqSwrxsLWFZnpH0iQ0UMP/yRu6vC/
      jgjroYf/v7mpA+h0uh5nuB7+MdxyymcwGNCpu1AouxCIxJiZmWH0Z9Pc/x9h0GnoVBswMTG+
      bmrUa7poaVcCIszMZYgFOhTtHSA2QW4qQafuRKFUITTu/vtns+Iv5YSYmZsjRkN7Wwc6wERu
      iUSoo0PRgV5ojFxmej34W69T096q6D5OZoGJsQiDQU+XshOxiRlGwm7TbGeXBqmp9M7kOnQa
      WtsV6PQGEAgwkZljIhZh0GlQqrSYmpp0706ru9BghPS6ccJAl7KDLi3IZKYY1J20X8v1LDKS
      YGYmoVOhQGsQIZPLEP/8HhgMKBVtqPVCZDIzREIBKqWCLp3w2jMwoFJ20KkxIJPLfyn3J9Hr
      1L9qK4FAgMGgR9nRiYmZabf4sE6NSgMm0p/NCQa06i4UHV0IjaXITaUY9NpbBcWDuq2Erz9d
      zPnMDOJOHCZHYUm/YLf/uxy/t4lB28X5nZ+z/KCSe68FxQMUHv2M5785R21RObb+XhQd+5bl
      22I5dTQGj6ggTn2zgoNJyezbcZCAYWOxNemucfHpb3hq6WEaSkqx8guhK3s/b7y3gbKqAqSu
      kTQnbuPzjfs4d+wI0uCheF0LB61M28fc17+jvKYQI+dQPGxM6GouYO7U2dg+8ARuplCatIsX
      PjvM2InD7iwovr2STVt+5NzZ0yz/dBkWQyYSZGdCcfxWnll4nPHvxvSrAAAgAElEQVQThyHR
      K/nhg39xpjOYQYH23eVU1axb8BkHok9Qb+SJZUsKm/ccI2b/BtadLMfHtIiVm4+SdHI/hSIP
      evk6IATai87y6vvLychMo0boQIBlOwvf+4QTp04jcu+NreoKH7+/hNScFIpbbAkNdOTP9wE1
      SbuX/9JWfQfjIBOjKL/AhMc+YvyMyZihJu6HhayMbWTc4NDuYpoWdi1byr7EZA7sPIDnwHup
      PbvpVl8ADQnbV2N8z3O8dp83+rZy9uzPpEWnoznjHPHpZXj3GUlvDyMuXc5BUV2BmU8v9HW5
      tEu9GTMiEkVpOifOZePdezh9/e3ISogmrULN8DHj8LT56y0jxReOcD6jhrZfXUpFUW49s+ct
      Z1KAGGhna/pV7p39JV273yC32ohH5r2PyFjAma9eICa7kYAhtoCO8vJSZrw0n8d6WyEALiU1
      0P/pV3lxTCAA+w4X0/vB2YRVbiM6o4rh3uYIgaaqWnrNfpnXH7zWIHoVqccPUqPrDrhvKU5h
      7/FU1EZ3oJ3/MxbuPPfSa5SnHqTdNIQJgVboO6o4dvICehNv0GtJPLiFzHo1rjd6JRg78NSC
      z6nK3MfX0SnMeOdJ3uk/jk0L32XkhJn0CbAi6h4xguKTPL06mcfHhmOJlszoXYQ8Op9XerXy
      0eI4svRGKMMe491eVSw8m4KdQyFGA6fz4ZNRfP7h29SN+BJXyz8bGKyi8Ma2qlAQYqXh2P7j
      6OTdz+5q0hFicqowMgv+pZiRBVNefZeHjUXEr3mZuKw6XAuKb/GlVbeSmdFGr3BvVC0VJKTm
      4uBtja69nvOXCvB10PPDqm0UVl7lq2UbsQtwZO0nC2mXykj+cTWXS2tZsWwjboHenN+9htjk
      eH7YlUKgg5C4S/nciUfIH8W97wM8//CwX/+o6SKnoImTP3zCm+8v4UqVBv++YRxe+S5nmp0I
      dTfHWCpB21rF6VwjBgZdc03TKyhIryJ2+wpee3cRV6raKClM5cKB9bwy932SK9rwDfLn0q6v
      2ZikZGSk87UvpZ7SwjSSj27m1bnvkVjSREPRZfLwZIhvtwlR7hrOM089ioPZXdor0StJOH2e
      oePGIhJASkw0rv1H42QmBIGIXuNmMXVI4K9HQIEII5GWyxeu4B0SBkBXWQLZ6iD6BTggEksQ
      iwycjTtH8KBQul83ER7hfcg+sZMT5y5SUphLZaMCOzdHbGzsUSu7MPf1pPnyKWLPxJGYU4tS
      dQeuEAbJr9vKTUZZViJdTgMItO1+nb36jGfW1OG/1lYSCDGWStAraonN0tM/yBrfIP9bfAGM
      JNjaCGhsUYIDYGjl4Kr1iD/9mtaKPOLqjFC0CtDowdY/hL6RvfFw3U1IeBiVe3fQ0ZDHhfM5
      KIz30djQhJfeiihvA9sPxxM12hW9nr9cm87IWHJzrgGhCeNffIfpvkHk/rSIY8dO05BUzotL
      l6E6tJCDCfl4Dbdm58aN+D70byKsf544mTDq2fd50COA8iOfs/dcFrMnv85Aa2/EWVv4cFcs
      vvWJPPzypwQ0HWbZ7vP0nTcOIwH0eeBlIqZ7I83dyQe74hgmzcIiYBiFbS3U1taBtT1GojuN
      BP4Fdf1VkltdeDvAGjqucjSpgXuGSmltbqShtRNvS9Pf1WXKupRArjiCZ+8NA4OBjDOx+A57
      EguxAL1ORdbp7cQ0B/LKE1HXppMCXAY+wVxREu2KBkwsHZGbCOlo70DZ2QEYcAkbw2uz7anR
      6PG0lmMsvoNO3l7DvqM3tFXsWcyvpuM5bCCtrS1U17Vh42jxu/HmqtZK9mxYi+uE5+njoGfV
      14m3eP2EMoZOHMGJzRtoQo67rTlqIxmCljQu1Tjy+LgBCIVaDAYQ/U4kmVDuSUjvEF6c9xqP
      PXAP7iZaTH3v4/25U7ly4jhNXX/+OfxZNGoVGnUXGdlX6OjqoLK6DRsne6zN1NRWN1FT04xM
      qmPvmpUovMbz0EAv1DoDWo0araqD7PQcWruUlJe34GBnSlFmJg1tSopKKnB2ccHS1Ji6hnqq
      a+qQWMjQadRo9V2UZGXS0KqkpLQMB2cbXN0DaS3LoqSujuKisu7B4C5SX3EVMzd3bIwArQQv
      fxtyMrOoq6qgvLb91wcbDKhVavS6Bkqy05n50GgkAj0Gg5603C7CAm0RYKDswn6+jmnh5Wcn
      IxPo0em0qDU62goSyVI5IGorRx4USKi/P80ZaWSkZ+Pt501nVQ5XKoW4agpQ2wzEWn4H+9xi
      yW/aygLXIDcqsi5TV1dDYUkjv32UWrUarbaNA99/TZ3LGB4Z4oNGJ0JmanyrRbAAC6dg+noK
      2LVtJ9m1Qp54+RUifLyQtqVyud2GwWGuuHn5YyG3IMDHHb1ehHdAIFKREW7BAxgSJGHXjsNI
      vQYyrF8Qrfln2X06j7GzniLI0ezvWUwbDAjM7An2suXcwdU0y3oR5axj68ZtSELG8dCYIfTp
      7cmZ3Tvo8r2fGYOcSc0rprYkh8TERDQOodRfOkKp0IXeXiJ2b94GAeN4bHQf7CyFHN+1nXJ5
      f16cNoSwsBCyYvZTKAjixSfv5crenRTJnIjwsuLErm2UmPTm34+MxD8kjKjIMJyt7RkwegTW
      EgADArEZAX4edxwQo+psx9zaBw9nK5BaEBEZSXiIP7auvgzvH9R9fr0euaM3rjYijny5AYIc
      OB+fwYXEBHLaJPQPcqddoyYwIAAzsZ7CjHRq62tITkqksFaPraiOY0mV9BvYi8Lo7WR0ujNn
      xgM4OPpg3ZVJUosLsyYNxcrcnKrMU5zIEfDyKzOwu0k36TYQy4iI9LjeVjPHDyQkNJyo8DCs
      bR25d1Q/pAIBGAxIZPb4eDlwYetWyk1MqKmsoa40l8TERDptQnhwZL9/XlB8eU4qUs8o7Exu
      r+uVF2UjsfLF3ur2PBlLC3Iws/PC1uJ/OIWEQUVWagF+vUNuS5O0raGSOoUIX0/Hv+zW7gbF
      edlYOPtiLb+5dv+4DtBDDzdy05dWIBDc5LveQw//v9LjDNfDP5oeEaAe/tHcIiCmjR/mzmbR
      3njOxx0nOiGXgMgoLE1umDk15jHvzU2E3j+oe2OkPY8Fb21AYlLN9/tKGTHwlyzkbdWpvP35
      NsaOGgRAS/EF5q7ewwPD7n5m9P+KQUPe6S28/fn3JFwuwi0wmJaM/cz/dBUHTybgFTkAXUk8
      n3y2hP2HTmAWNBgPq27pkMaCBD744FP2H4tF6hFI+elNfLVhJzu/X8yRInNGDwqCzmqWvDSd
      ztDH8OmWJKC9MoNFH33CvgNHabYORlYdz0cLl3H6TDIWgb2x1pTw5cefsvPwMaq1jvTyd7rD
      KnZwYv0yDhdIGBBqxa5lH7Nu217i85T07uXJ/m8/ZuO2PSTkKenVK4SfFR/PH1zC0jV7aBQ7
      Y9eawPxFazl48AitFl74mStY+sF8thyIxTGkHy43xEYo6/NY8PFC7EOHY95VyMfvvM+u/cdo
      MfchxNMWbUsp82d9gN39o3AQ38l+h5bME+v5aMlGjsWlEdi3L5Wx3/Hi/DUkno/DIXIUuUdW
      sGrtdo6cy6fXoAHIft501mvIidvGku25jBgcSknC9ltZ2wxo1Fpmvr2ccd5atn36NjEZBQx1
      McPT15PG4iLEQiXNjXXkZCTTYOJEiL2GttZ2zJxDGCkV09FYTlZ+BZYuftiJNLQ01pBxKRGx
      rTfulq48OHwArVVXKW9Wo+jQ4BMUhK2pkNL8TBo1xpgZy/Hy97i7uqJdrWxaH8/T336D+YWN
      HD+fgkdhDGGPvYd32hfEZhZjlbKXgU/OZ4yXlibhNbu1voPY7dvo86+FPODZSZvACueQVxky
      pYWv3v+AgTNGYyLSceXCMZLSKgi9HmuuJ/nUbixGPMd799hT0SHh1Pqf6Pv4+0x0L+Tz706g
      9ClE2udxltzvT23jHeyUXiP1xI/sP3kJiweGAUYMnDSHB2w1LH5tOcVtExn44NNMthOy6M0v
      KGmaSIRjdx29LCUsW74cIwy018p5+5PxCAsP8/b+80RooM5zIu8EXOWbmHR6zR5+bTOsgXVf
      f0dmfhkP6Q20FydTYjac5bPFvL49iQf62HJ4/VrO51Uy5Y5n3EqST55l9L9XodrxKhcLWrGo
      rmPiKwuYPtAN0FE9aAp9xpuzY8E8kss7Ge/f7QdTlR7N+l0nqDG5DwNQU1L3B6ZABj31VWWU
      lhZQ3q7BQdjGwiXf0g4cWrmCM6WNtDZnkZiUxZbFn5BY3i0h0lyczP7jqWxYs4yUnGwObt9G
      ZbuB+vwrXCnLZ8mihWTlXmHrkeNc3rWQD9dHk3xqG8t3xdKYF8Pnq37iSvxO3pi/hgbVf7/F
      20Ykxs3ewJWMQsrLS7mYU0Vgn/7Er1/A9nQjBgZJqc5Xk3fmRxas3Ife6NqIpVFQWCikInkT
      n67Zh/LaC95SlECZeV/6OstQ1V0lrlDPyCifGy6ooqakhNbcON77bD0tWrCVW1JaWEh5cSmZ
      RVkUVDXRUBjDJ4tWUqa482VZ0PBpPD118LW/jHHztuT42vUUm3rhbG6Eh6cTh9cupUzsg4P5
      zyOygqPb9/D+BwtJzK9H7uCFo7mIsuISHByd6Wiux8HLA2c3d5rrmvilm5oxc97b9Hbrdo4w
      8wjHuuII73x9lAEjeyGTWDBh9isMDbS943phMCF8aC/2f/k60Y1ORHmLKb2SQey2r3nniw00
      qcDJzZWMoxs5XWWOv4OYn5+mrf8QXvv3NH6O5S8vz7l1B9BpVMQf38tP+6MJn/QcwwNuroSF
      bQRPzJ7JjNGWXMiu/eUfAiHejpakJKQgdPTB3BisAnvz6NSZuFrU0tJx7REKYPADjzJ1TD+q
      66vITT6F+/0zmP7IRFz/ilBCYwue+uAdDFlxVKsk2Jgoid5/gUfe/ZJXxtqz/0w6rR2thN43
      k2d7K1i4+UK3cIjBgErXgO/Q2cwIU7J6bwJa1KREH6fXuAcQCeHCuThCB92Dxa98vQwolVps
      I8bw9iOerFx5kKHTXydIUMyVZgN2xqbo25owDbiPV6YPYc2atXdcRVO5BeJfGfPMmTL3fcY6
      l3LoYgUgYeqrSxhhXc7xy6XX73PYjE/494Rg1m3ehdpgoCr9CBsTNDz16D2IDIbuLKJa7W+C
      pkywsPhldzf//F6EQ+awbMEscg4fo14txtzsNhJw/zc6atl3uIDnv/iK6REajl4spPeYZ3n3
      gw+YYJ3O8iMF6BEz+OFXmTfOmvUHLl8vamxmjqnRLw8lcOiEW3cAkbEJk2fPZe6rL3H/oCCk
      RkYYd7bRpFBSVVkDQFdnFbV17eTmNmBrc6OwkwG5z0C+XPEFZiUnOJ5eidjo9+d/Rjckz7C1
      c6amoJSWmkoa78Rx6j9hUFOYWcro6U8haqwh1C/whn9qUamtiBzqjk6jRafTYmRs1L1jLbGk
      T6QnWq0enVaPUGyEUNlI4hUZA8MsEdBFW30D+9ct58dzaezZtw+1Vg+YENYnDIH22vlERtRW
      lOM7bCLe7SXIBw4lIioSG5EOrU6LWHiXswvqGjl95CytnV20KTWYSro4eSwGZVcX7Sod5ibX
      5vIaFWqtFL1Wg5FESkveCeZvyOaDj1/Dx8oUR3cvarNzuZqbi4evx3932TYYMACaLtVNrgl3
      A4MB0KtRdarRYYLM1AiVyoCpqZ7E6JPUtHbS0taBhYXsP5xBg04nutUiWE9zVQ12oQNxunYe
      gcQEW0MNm7adwjUgjNCIQHRtnZTmxdFgPYyZ94XQ1KDCN9gVndAKX7Navlu3A6HHECaOCEGh
      0NGvVyi1NWV4+oSiwYgwZ0tELr3wknXRoDPj3hGjaby0i9NXKmlpMOG+ScO4S3pR1xAgUFXw
      zfI16HxG8/jEewgNceL4xm/J1PjywvT7CfbzJOGnDZxtcGHe0/dTfuoQGV0yhgyNJGnHGpJa
      nHn28XFYCDXkt3QxsG8oEsQE9BnG2LEjcTUyMPSh2SiTdpOssKJ/70iK47azL03Ns/9+DEej
      NvZu/p60Ll/mzbkfbz8vypMOcOB8JdPnzMHV+s5HzK7WBrrkbkR4OVKVGc2mH49g2XsKjwwP
      piE3lrU/HMS+/xQmD/bg6PLNGA/uT9mlE+y51Mis6VOpTjhJSlEZKfGxpOerGTBuJLorxzhR
      YcUzj96HuuQCB89XExboCuioq6rDO7QPPgFhNF3azc7YMqY8O4cQJzkC9NRW1uLbrzfW/2EQ
      /EOIZQT6mLJr7fdUWfRnztQR6BsyWL9uCxUWA3j5oSGoa9LZtHEHDTYDef7hwaT+uJUqW1dc
      zU3Rqdqo7zChT6QXmubi/819gPqsaDYltRNhUsKpej8WvPIgt+m5cNcpy01DLXPH1/X2FBAq
      slNR2nrh72D1F93ZXcCg4lJMMoGjBnM70QgtNcUUNUGvYK+/7NbuBnkpF5D5hOFiefOg8j/Z
      AbSqVi7ExlLVJWPoqKE4/o4PRw893A3+JztADz38Xdw0s+5xhuvhn0SPK0QP/2huqQoBBqov
      /MRnu9Lo2ysE6Q12VGVzFU1dRsj+S7aY/2sMeh3VmSfZeryeqEi36z3eYDBQm3GUjXGNRIW6
      0ng1nqWLvyG9HsKD3Ll6dh8rv/uB8/mt9OkVdD2hQ33qPl5Y8C2JZ5OxDIjErDWPVcuWc/pK
      K72jPIne+CXrdhxg344tZHc40T/UDaEAGorO8eHrX3Dq/BkMTpHImi7y6UdLOHkmHq1TBE7K
      LN77ZDGnTiegMHUnyP3uyg22laexasVKTl7Ixd47GCtBLasXL+HYxUI8gkKxuubeUpCRwooV
      K0gubCc03I+UQ9/x7Ybd5DcbE+rvRkXSAT5ftZEanT1B3tfUHQwqTvzwNRt27ONySSchwd6U
      nN3D4jWbySzvwsvZlB9Xf8bOAyfZuvkHxN6D8Hf8T+bJG9tOQ+7ZAxzL1BAR4HDtVz3ll4+x
      ePk6ipQywvxcEaKjMOkQ+y8qiQyw5PSPa/h/7Z13fFRV+v/fM5kk0zLpvfdCEkoSulRBULEh
      gqKguJZVrLt2UVeFFRRBQBCl996kJbRAIIUUEggJkN6TSZnUycxkZu7vD0KxLGVlv7uvn3z+
      y809c+459572PJ/n+fy0YQfphW306hnOZUliEwUpu5m/YCWnLmno3SuInP1rb74CCMZO9h+9
      gNBwlot1rQhmE+0d7bQ2t5K27Vs2HLqA6f9G9P3fQnVOPF9/tZCUkoZf2KOb8o/w+awFpBbW
      Yja3c2T9dmKmvo85cz95DS2IFT5Mf/99HHN3kVJzZUIQKC04Q/8n32X2nBnE+diQGr8ZhyFT
      CWk8xvFSgQf+8j7//Ow9eni4MeCe6KvpPzTFhTjc+yxz5sxhdKQzdYXF+NzzHHNm/5Oxkc6o
      S8/hHDueOXO+4NFBQXe8H+JXr8Fm8GReeDCcXbt/5lLCKlrCn2CYZzvxx/Ou3lcrEfPkWx8y
      LsaDTl0z63en8de/v0rLqc3klNSyZEMif/3wbcqOrqVMc8VHY8A+cCgffzYDZeXPHDtbzrJ1
      h5j6wQwkJfHkNFrz4ruz+edH03BxjqBnwK0N7osntjF33grOVDVfu2hoZPe6IzzwxnuUJ26m
      tEVHUcouvvnmJzIqNWDWYec/lA8/fR+3sr0cLbwibtJC/KafGTLtXTwK95JU1oHUOfLmA6Cz
      uYwqsxPPDvHjSMpF9E2lTH/hSeYu3EhSahZnMk6h+S/E9t4q7Hzj+ODNyb+5buUSzYy/T0Vh
      bQH6VsrrVAQH2BPkaE2VWiAsriflx3dwqMGJHq5XVj0txeeKyDu8ie83JtCmb0dd20xQQABh
      wUoKy5sAqMlPptapH/d4Xwv5LCs7x4X0fXyzZBuNeiPVFYVkpO3m68Wb0XRBdWk1RSkJfLto
      NRWtd1Iz/jLEYgFDlwmMWpLPnKM0v4GIED+8fRxorq29ep9vy0kSt67kbJsCZ6UdsUEK5s+e
      h8YxFi8bE81Ka/zs3FDaG2hs0V4uJLKh7+AY5GI97e0SVHZ23NvHg8WzvqDI7Eu4hx0IJlI3
      rSfk8WfxUt1aTLBn1L28Ne3BX17saKHA6EKghx2+YitqdHpcw4by95ceufx/S3tiB0WjEBlp
      7pSgUlzxOajo2S+I7d/PJM0QRLSXiuj+cTcbACYKT+wgt7ae5Es1ZOzZRUW7CStFKK989CIj
      B8XSb+C9ON0hL/d/AgoHZxSS3zoRbJxckF6vIYEFIhGIxVeEKqzoOXoCr48Qszqh+PLqYRJw
      DL2XZ56bin9DAisO5yMSXQ4iEl/NQmAg/WQSMcOGX1ebEVu3aJ6e8hz3uhQye00ycp8wJj/z
      HGO8qpi5NBFrtzAefnoKoyMEvl209Y73w4MvvYr47G42nSzDRikGLBCLAbEY0XVfQb1OxYiH
      HqYufhEJOWdJL5Tz6puv49l1gdzKlqvJD8TiXzmzTB3sWrEEUa8J9HPXE39WzWtv/41oRRNn
      itQYda3suaRjXIzLLceB2zg683u65CILMSIuJ2IQdd8nuy7TltDVzsENy+jsNYEh3t3+6o5q
      jqY28uQbf2OkRwMnLzSBWXdjNqhJ28DhND2vvPQkrhZg6lxD+vlKsLbGUixCJBZjFv6H9z+3
      CmslrvYtlFe2UtKoI9ZBoPj8BRwCAlDKrens6p6RBQm+vQfg6u2I4KAiVw/2jkrKKytpKG7H
      J8oOOmrIK7VlUvD1y7yAe1Acfp6eGFsd6KzsxCMkFjs3T4x6B4zntTgFReHt7IOp7CKCQX3H
      m9ihFfHwtDdpObeJ6tZI3H1zOVZai3OnBqVd+NX7FCERqGwdsbcR0dHSQJeFPfYOLihlBlp1
      AlYdBuraG2nXCNhd5WkZ2bv8a2ocR/LSwwOx6CylE2tcbO1xlEpobO5A31aNIA7A4Q9RoQGZ
      Em9jE5WN7ZSbdPSz/tVqIuiIX/09RYq+vD5+2LUMdIZOWnRSXFwcwRHS61tJ3bP1xgOgtaEc
      s38UQyLDEQOy1ji2Zlbg7uaMBeAV1psdB+OpGhGCp+3/kvjFLyGWqvBwvrwdSU1Yg130E4S5
      SbGQqXB3lCMWqxg+YQTfL/wMZdhgIp2VZKfsZNmaVZgUPrz5dhBnju0D3150FaWwbO0KxDJP
      pk2PxrbRyKLlC9Hb9eH9IAXGlkoE3wBc5Jd7PmffXsw9+2JdncuGFWvQWih44ZWJdBbsZ/Xy
      NXQKCp59awKGkiOsWbmaTrOUR56dfsf7wNhWwfIly2gT2fDUSxOIUPZm/5yl7JZ58uzLEWgu
      HuKwJoIechHfL5iJ3Hs4L/cbglVhJl99+hmOQYN4JCaU8LYo/vnJFwT3m4CfrZ6DKw7Qa3wI
      G3al4RDSxuc5Jxg3+VmeGRXGzE8/QuXeg2mxfpjrknAM6oHFbapDWirtcbW/vMU4tGcVEUMm
      Mm58FD98+RmefcYS0J1sQKKww81BganhIpviU5G5q/k89wT3T3kd88VEfAaNYPLDgaz4fAYW
      tiFMf0TEgveP/fmC4vNSDmAVci9BjrdnucrPOoHEpSfBXrY3v/k6XEhNwsIvimC3Pyp8+p+F
      vjKZo+pQxvZxvPVCgpakPSlEPTzyD8u63gpOJ+7DJ2YMbja3t4qkJx3GK2oQ7na/ZRb/6QbA
      XdzF9bjrCLuLPzV+swIIgnBXIeYu/jS4S4a7iz81bhIQ08mJ1UuYt2oT8fHxnM6vICw6BuUt
      +DGM2iY2bNlPYHTEHZH8/HchCAK6+vPsPVpLcOhlQQdBMFGeEc/s75ZysUFEeKg/xsZLfD97
      LsUmV8L9XNA3lrJi0Vz2pNcRGxeJ9XXWC0HQs27dGjwCemChrWb193NJrpbQJ8wHsUiEYGhl
      /9rNWAb3xL678S012cz9+Ct2JsSDZwzeVhrW/jCfxBIzfSP9MTaXsmLRAg5m1RLZO+IXdu1/
      t921eWmkFRsI8FSR9vNyFq3YRo3ZichAZ84fWMucxas5nnWJgIje2MstAIGsk/Es2XQUv9AI
      7KSQsOYbNiaVERYehsLCQMrulSxYvR9VQCSe3RmmBVMLG7/7is0nLuAbGo5K3M7WpXPYkHCB
      gKgI7KxMnN67mu83JRMa2xuVlcUt+QIEQaCxMIPj5zsI9r1yOBdoKc9i7pxFaBT+BHvaob50
      igXfLuZci5yYMC8aS9L5/rufUFt5EubteLWuivQ9fPL1EhLiT+PbbyCi2qybnQEMFJw+xX2v
      zWPevHl88tYLuCpuXOIKzPp2jhw7yX/bSazOT+S9l19lS1rJVSqEWd9BRnkXH8yciezcHnan
      57P/x0V4PDydol1LyGtoZOeSb5ANmMaUGAvOV1zXCsFEUfw6Plm+m1ZdFyd3LkUb+jDWp9dy
      rPu+0qzdzPpqOXXXBfPX52Vj6vk48+bNY0yUM0k7V9LhNwq3vA38XNDJ5oWzMUQ+wqQ4MUvX
      HP3D7S48tZW3p7/PoQu1oK+hShvEBx9Pp3r3fJKKO0hMyGXSxzOZ9eHr+DtemaI66Mg7xOPR
      Jr5ftZ+289vZVhzEMMcq1sZnUn1mD8szLfni7xOozi/hSvOaCzNRDX2ByX1gwbr9tFRcQNF3
      Ks/36+Kb1UeoLUpmXXIH00dLmbv0GIZb3HOUnt7N3159h33nqq9dNGrYuGAF/Z57jRNrv6G8
      pYo1c5cSN/k19HvncaRKx/plK+n14EOcXrOckute3dnsZPo++S7z5n1CuH07P8ycd/NDsLlL
      T+LPG9m4cSMZRQ10akpY8MlbvPHXF1m8O5vW+iLm/+NvvP7aKyzekYG2sYAv332N9z//lotV
      2ltr6X8QVjbevPLyU7+4ZiFVMX78Q6gsJUisBES6ZgpLZfQIdSfC0ZqS0mIKSxRI2y+QZwoi
      xuda9KuuuYK9hRJGhFgAWirK6wgPC6V3hIzzBY10tZRwLLWR/n2Cf1FnRXk+tdW57Nh/krYu
      E6XqMoJCQujZ25mM/Ep0RjO2KgUyuYRz2Zl/uN02ntFMe3iLMHYAAB9gSURBVOq+y39IvXhs
      0nBsLC1AYolgMnCps4y8g3tIOlNM19UPUoZJqSI+pZSg4ADK89LxjOtNaHgghZVlFOel4xvg
      yN7jRcQNjLzqSbcPHcEIny4OJ53F18cXx5CB3BcIO4+cJSDAm7bKchw9w/GM7IU5/zzaW1RG
      UbiG88KUX1Eh2po43+pCWIAr/mJLyjokBEW4kbR3G0UiPwIc62iqlhMYHESEqobCmqsFqbpQ
      SnnOKQ4kn8dk1mPssrz5ABCJLfDwDSQwMBAnlTUV6Ucosx3GN99+wIW9yzl1aC9NDiOZ/eWH
      pBz8kTOHt2IIfoTP33+ZAJf/PkfC3jsIb4ffLluCYOZC4iZyiWB4tCeIFEilImRSKXR1Uaep
      QoecmqPfsy5NjQAIJj1ZiQlEjRh3lRVrIRIjtZYik0sxC0ayT53CI24wrtbX26qNmERyegQH
      0HVhDwt35SCyECOzskQmV2Eym3nw8Qnk7/6BtUfzMBn/eCIAN/8wXK6LpBOMnRzfsR5tyP3E
      eYlxdfTA29OFoxsXkXSpofsxG2is7iLY3516dQ1GwYRKLsfKSgZiCzpbGiiva8NZVMr877bS
      fB1lSWKtJKZfLNVns2k2gViqZMCQAdRkptOks0Aqk4JUhrw7WP5W4OIXipvtr2z3goBgI0cq
      AqW1DJGuieIaM8ER4fjZ6ymr0yKxUGEpkaCwseDqCdfYiVgRSpCfC7nbvuXnPEsemTzyFgaA
      hYSQ6L707dsXP2cbzF1GxJbWiCVWiAQDXYYuJJZWiC2sAAPGri4kFpZILKVIpf+boYyCYKIs
      dSc/Hmni1Tefx8PeBlt5I7VqA1WNHdi4OBDi70/vvoMYGeNDdmENAmBsrWHnwRPs+ukLTp06
      y5aEPCyUltTWq6msaMHJ3sjRbXvZvm4ZP59OYfvOeLpMAGL6PzydaY/dy5gh0RRcLAcrG2ob
      m6gqr8DD0RY7vzg+/HwmE2I9cHIJvkkLbrfBRk5uWUJKqx+vTxuHQmrDX9/+lGFDhhDpJqNE
      3c22bK+irkbK0IExFF3KRebgQXl5JQ31NdjJpDj5hBES2YdBowZDWQHtegABQ4cGrVhFXGxv
      jFU1NLS20CrY0HdwLFSUYJDKaK2vxVBTSYudE3+IDWEtxamlCbW2iwpDO8rORi6oVdwzehiD
      QrpIzu/EQl5Ds6aZyhoZdleCnMX2jH/jLR4ZOZghUTbkl2sI7Pfg7eswePcbhurQXN6evhnn
      gVMZNNqZM98u5J33NhHc9xliR3txeOY3vJst4XzlnZP8uVPITNyK3Cuar977CF3EGOb/431G
      TH6ToQ/24OsPpmPt1YPHvYJxGuPP8n+8TWu7mVe/DCP31GFE/nF8vXQdAK++Us4To+OQFDfx
      xaIPMEgDmf2KP+4rNoG+gTkvf8SQR+/jYuIhxD160XR0DRuTK9Bq25n8zleEtIqYtfQztCIv
      Zk1xoyRpHT/sOUWHzoJn3v/ijrbZWJPMWzNX03PIML6ceZ7Hn5lE5qrvKNEJGKT+vBfhzPFN
      BwifNByPwG18+O16Bo57kaB+KsSvf8oXFvZMeXsGoc6BHJjzA2/s6SDogRexqM8h8YyMHrb5
      zFh8CAvBSPi455BVnOSjxfsQm7oIf/RlYvo4kbTvC175yMDoN79C+W9+FicSNhM64CHuH23H
      7Ndexz6wL6FBvXkoNp6Zr7+F0aTkwyd6U6HxY/7HHyENGcmLznAyYT/ePaNJXPUDGdVttHfI
      +WiuNym7Zt/MDCp0LyGiq3pSt201FYn+65KqV59ZJCL35B4kQfcR5noj25QIfrVQ56UnInKJ
      JsLP8Ze/+euS3eokQvfvXDx5DGNgND3cb8CB7y5zff13IkP9rb+rLpK3HiDgiYdxu43321J5
      kYwqA/f2i7rhtubXvXk76fevtEEkEpF8ZBc+MQ/8inf223f1i7pFItKOHMCj15DfTTXzp/MD
      GDq1iK3lSG7TB27QdyKSSG9b5Fmv12EhsULyG6W+/yEIZjo7DUjl0tuarExGA0azCGur/5uI
      QH2nFolUftsawzpdJ5ZW0t8l4v3pBsBd3MX1+M0ZwGQy3SXD3cWfBr8ZAGazGfOd1uy8i7v4
      H8UNs0IY2urZv2Mtx05lkJGRQcbFcty9/VHJ/rXxKDv1BCYbF1TSW9kXGinKPEGTlTsO8v9M
      QE1zxVm2bv8ZtVGFn7s9YtHlQ1N7zQU2b9lNrUGBj4cDDQUZbN+5j/J2K/xdrTi2awcJJ5LJ
      yMig3doTH1cbRICusYTtW7ZR0SnH18MJC7EIo66J9Kx83N3d0TYUs3fXLs6rBUIC3K/amfVt
      tRzcsY3sWiPBfm5YiEUIJh1njp1A5OGPUgJmXTOpmZdw8XL9wzKp7fVF7Nmxm0saMUF+bjSV
      nGHnroPUY4e/ux26hmK2b9lJaZslvt6uXIkaLbyYw7GMYrx9vLDCQPKBzSSercHDxwdrQUvS
      vq0kZlfjHeiL/Ff2zMrcNEo7pJiqUli/I4GMjAwuVjTh4x+ItdhIXlI6Yg935Ld0HjJRnHWc
      XfuPojapCPK8ZkTQt1azd8sWztebCfBxQyIWYdS1EJ+UTpCfDyKRiNbaIvIrOnBzvha/0VZ3
      id3bdlPSYU2QtxN1hRk39gNIpCpiBo0iWHyeTIMXowb3xV5x4w/76J7NFDR03PCea+jiTMIG
      zlR23uL9twljK+nHz+Ef058Ty78jp6m7ni4tSUczCR4wiMwdS0nJLyQp5RIRg4dQtHMhR4r0
      RPUbzIihfalMT8KsUF0+HBoaWTF7PnqfGFozdnHiYh2dmjLWfPsxs1YcwiTA2cxT2PhH0nLy
      R3blaLofRMf+pbO5JPbHseYYG1MrEYCGopN88vcvKO6ArrZ6tv0wkw/nbf3j9BFzK+sXLcXk
      EYZQnEqRRsvi777DIcCPlDULyChv5ae536IMiUFfmUmJ+orH3kBb/gG0BUfZk3yJwoTv2ZAn
      IdS2kTU7kqgpTKdM7Iu3Pp1FO9O5fqNs6ihn3qefcehsFfbekYwaNYoACzXZVXosRZ2ciV/L
      K6/MotxwawH/QlsVJ3Ma6Nk3muSlc8hsuvZOdy5ehMY1GklZDgUNnSAYyU9Yx2vfbkQAGkvS
      mf3Be6xPvHjdL7awbeF8dK4R5G6YT3JVAxmncm880YgtrfHwCaTdzR5brReBvl50dTawe9kq
      UgqaGfDws4yOUrFv02rSS9q4Z9xUzIZWEjYs5qAWHntxOsXbF1MkEmhttmTCtBcJ4hILf9qB
      0S6Iqc9PuNJcTu9bxq4TBXj2GcOzjwwk58Aq9mTUYyEyEzc4Bn2XMxMf7MnGFau4b9JfcJDf
      gjFZomLU5EnUl+Wz0yxGesUKYKlg7FOTaarKZ2/XZUHlx6dORhDMlDuY0bSCaw9fyM2jK2gc
      Q/3llweAXktJnQVT+kVBWzzbs4uJtbXFvXcs7sX1AAwc8wwtNRc532HC7eoqqKWuooUeD8UR
      01bJxoRsHo+Rk3TkHD5BfgDo2ttw9I/Gq7j85u26GZoKyNe48rSHHQ5hj+NvL0Ehl6Lt0CKI
      pYjMlZS12DJCZYly6EN4u14xD9ZSmaWh/6hwtuYU4Cspxj9qPL2i6tm86ygWT77LZP8m9qzY
      h9TjeouRQHr8YZR+gVgDMltXAm1s2F7UzJTXh2Nt0qO3diM69NZln0Q2Pkx5zgfB2MJpaTtN
      7YADdGmqSWlQMM1PiTL8Ifxc5LTXXSCxyEio5+Wy7W0GImN7kf8L844EhY2UZm07RqyxtrLl
      wWefu/2AmMrMBI5VOvD2G0+TuGkRyYd3kd0ewGcfv4arxICgNxIx+hkm9pSx7chZyi6cI/De
      v/BomAWHjmWw5buVxL7wCfd5NbD9SLd4gaGE1Zvzmf7eu5hyt3D0TA7rDhfxwUevYdVQgN5C
      xtnMZFrqMsitc0b6e6kC/hUEE011dSjlAjXq61cagaa6GqytJDQ2tSMIZlrLTnO4xoPBPRxA
      0JJ64DD9HhzbvW0CFC48dr8H89/9iAMZZdRoWrHz7ME9caG/mEnam9QIChXq6lrMAoAtgx4c
      zI65H7Dp8Fnaapu5lHMao38Mod3C2zbuAQyMjUZ2u/bZ34NWS6H6Etlpp1jy1SzO1nVgJbam
      vKgYk1yFhdBC5dlSMrPTWDJ/LjlVbd0FjRh0LsiUNlhKIWrMRIo2fcGC9fE0NDXQaQCzVoPG
      LEdfX0en6XI/GlsKyKi3Y0CIe/egENAWHaZSOZggVyUSuR0DBg/BUXF7GzvBbKIs6xjZ0r4M
      8O5+QoOBpro8Mk9n8eOsWaSVa8hJTSa03zCU3T/vGz2I3kGuv/y4jUYESwX15RfRSW2QmE0g
      mG9/AHQ21pGfm8by1TtxiRyAqbUZWwd3ZHJn4uLCsbBxwMvJBoVCidlkBpzx9rRBKpMiMuio
      arTEy0OJo4st7a3dHa+rxyhxR6l0wM7WRIOmAgRHbKQq3N3tkDr7MVBZw08rDhIyaijy23lq
      sRWh/UYwcZgjiTml166LxATFjOTRIW5k5xTRdOkUn3+3lzc/n4GPygqjpoZTtc7cE2l7baYT
      WzNg4t9Z/v0cBgfYEerp9btVeva4h+cn3EPaoUxMAoAFUaOmsXTpfO6P9cAlXEnCslWcPHqA
      hOwzHNh/BP2dTAWkUBDuGsMjU59jXM8uTiUf43ydD1NefI3B/u0cyWnCPy6MCROfY5i/lIyr
      jDEpCtsqOjQtmAxSbP3uYcmqZUx/ZDBWbt7YK8DSKZBpL09Cm5pEoxbAyMkVi0i7kMO2g8c5
      cfhnqtpMZCYcJXbMCGR/gAxQkrqbpftL+XDGdJTdL0FibY2zVwyPPv0Uj/aXkHoknp+2neTY
      z2u5kJnFnrQyfteG2VTG0fNSpr7xCpP6C+xOKUF96cTtn7U8Y4fRP6kaB0dryhvaCBk/lJOr
      d7J4aSatZle63/jvQ6risccCWDPnO+SacmKfvg99/D6w6UWU126WL/6G6oYAXuo9FE3yMRb+
      uIz07BomPGxNv/vi+GjqDva+fRvh1/pG1i9cQp3ChdoLHUx8N5Si3GQUbmEcXruYBoU76sIG
      Rk1U8NUnM6DXOE7tWUvr0EcIohaziy1O3R1fmp+DyNmTwp0rSdfZUnHRzCuf+P2qQhMHVn3F
      2WZbumoKGfvUB1Tn5iD2DqTu5EoO5Atoigp48sPn6DPlPoz6ZpY0qIkdORgrC+4cddwhgsHh
      +1n13ULUxXKmfjISc9YMVi6eR2ONmElvDCG/OptlPy6kstLIM+OcyD2ZiffgPtj08GDNoQKG
      Pv0ATfn7+OfGC9joyhg09mWaU7bw9eFy3EUNOI99GEVnCbmVVgx+ZQ6xXUaS137DecfRuEn1
      7D5vSb+pt8id/x3oa7P4bNZy/IeP48iOdfS/fxLmmgw8Q3ryQIiIHxf8QEMBPPHOWF6eNA6t
      ppqCphbu6+P1m1k9LzsT5wBf7o3sZPncRWhLO3jsLSmzP/4dKsTvBcXr29Q0m1W42koRBBMt
      9TXUNnXg5OGLo40lzeoa1M2duHj5Yu5oRGrnjETfSrPRGovOVuQuroi1zbSbpTgqxZSXlmGW
      2uPl7kinpg6UrlgZNFTUNmHj5IGzjZicrExkKge2rPqe4S98SW9FKXOWZ/Dphy8gueXUGgK6
      tiYqqhuwtnPFy8WW7MStWIWMI8ROR1mlGmtbZ9ztZVRXlaPVXzb/Onr44yA10tjWhavTZWGL
      nJPxCB596OFmSWlFHXIHd9ydbBCLRJiNWurUWtzcnejqbKGqug7B2g4fLxcuHj6IITyGKGcZ
      leVVoHTCx83h8rZKMNFYo0bm4o5cAuYuHbWN7bi6OfFHWVQGbQtVVWos7VzwdLZF19pAVU0T
      MgdX3J1VmDpbKa+oRebgjpuDNUlrdxMw9QlsmxtpbDPi5emCRGSkprQUrUiBt5cblnRRW1lB
      u9EKL19P9FV5JJcZeWBobwC0mgZ0EiUOSisaatQo3VyvnbsEM/XVdSjdXZGJb76Em3RtlFZU
      YTAKIBLh5hNETuJWAvqPx0NhoKK8ConKFU8X28vvwNRFtboBTzc3RCIR+nYNrQYrnB0UJO3f
      hWffkXjJTVRU1iGxccbbWUZFacX/ZlYIk66FLcu+4Uy5Fufge5j2aH9+3rgSz6HTuDfK9Q/x
      ZNoa65DYud720tzW0oCF1B659e0VbGluxFpmi9T6fzdvEoKJenUzjq6Ot7Un1ne209klxk71
      f0N7b26oQ+7gitVtbtw1TfUoVI5Y/c756n9yANzFXfxf4TfTkvgWlqe7uIv/X3CXDHcXf2rc
      JCuEkcq8HDJzL1BaWkpNYxsyiYmahk6aqyqxcHD4RbaE30LApG0i/XQWWokNDjayqyZFdWk+
      9XopdkprBMFEfu5Z9J3ttBqtUMkvc/U1FRdpMipQyf99um1HfSmnTp+htLQGpas7CksxCGba
      1GWkZWaj0YtxsFddpiYIRvLz81HZOdHVriY7I4sGgxWu9sqrHPYubRNn0k5T0y7C2cEWo7aB
      7PRMKtsE3JxtMbTXk52ZRVWrgJuL3dU9taGjkez0DCpbzbg62WHWtZKbnUlRbSeu7k6ITZ1c
      zDlDaYMBZxf726b8/hqaqgIys/PRW9rgaCOjrb6MzKxztCHHyVZOe30ppzNz6bKyxd7mmlOr
      rqqUnIvl2Dk6YiXu4lxKEnmFpWhMMtzsZNQW55KZW4y1vTM2V841goELWWlcqGzC1sEJqaUY
      ECgpKcJaYYulhRhBMFF9qQSRvd1NvplfwqhvJ7ewDFenaykbO1tqyDidRbNRipOdgrbaQlIy
      zlJaWoudpxcmTSVZmWdpEylwtr12PtFqqsjIyKZVkONsa8GFtNM3GwBtbP74Lc5ZR+BoZUCQ
      WCNS57InpZ60datwGjsaT6sbHO4EM0krFnBK3Ujy/jx6DovjSrr2c/sW8lOKkdEDQqAjj1en
      L8JeXE9hlzvRAZfV6JNXzSBZ14u44H8/82TWnvlsOGvCx06Ou58fNlYWmHQtrFm5mi6pjCOb
      tyAJjiHAQU7LxaOMeXUu4x8Zzs+LviK7xZqK5ENYRd6Dh8IC0HFs2ZccLLfm4qEtiIJiqU/d
      TGaViYxdq5H0GE3lybWcrekke/9GTEHDCHCwAoxkHlxDWrmR7L1rMAcNpfH4cjak19J6Zg/F
      qlhU5ftZEX+e6uxD6Lz7E+R0QxnqG8OgZstPW9CYOti66Shx9/Vj5Rfv0GC2JnHXATx6R7P8
      i48w2DiTk3wK17A+3Z51A6lbvyE3N5fMWhV9g7V89uZPuIb5IbVzwVaXz5fztuEi7+Bkfhe9
      e/ohEYEm/yArj5bTXnSc03UK+ke4U5z2M898sJB777sfe6mIynNHefGpL+g5dTweN/pmrodg
      puDYGsbP+pnpT469fM3UwpavvyRHZ0/Stk14DhhC3p55JJRa4qaU4eVvx8ov/kE1Ci6eOoFd
      VH+cZWIw1LNs1mwKjHIuHj+KU+8YdBWlNz/0iyVWxAwZw5gxYxg+MA5Xd09C/JwB0FWfY+nK
      Ncyd+Slr9h9j1ZwZLNx4hI5raQZobapH6eyGWGz+hfUmasBIWnJTqdaZKTu+G9WQSYSGh+Pj
      oqSh4CSfvvs+Cbk1mBFoLM3g6xnvs2BTIl1mgeaKs8z78iO+XnUQvflGOzgD1dV1jBk3nrH3
      j8Ct2xNpIbPjxbfeY+IjjzHY14rC0kZMOg1b9ufi520GbS35xVY8NmUqEwbK2JpY0B1zZKZZ
      3UBQv3sJse1C3Wxk4GPTeenpcYTamVG36xk2/jVeeOoRQh2M1LReCW6X0Pehv/LK1IcJcxSh
      btPR0tyCR3g/+gUrKK1pIzMxlx6jxzN+cAgJJ8/f2gfyr2DlwtR3/sYT9w1C2qlBazTT1NZF
      3yFDcDY3Uae5RFWTD09NfJJQ2zaSL1Z1FzShshQxINIbdZ0ac2URop73c/8DYxkY7kVB6iFc
      RzzNuEkv8eYzQ65lhYh4gBlvTGFghAdqTRNdukZSz7Xi7nzZs2HUNpN+pggHV4dbDogH0GtK
      2JtcgZvLdexkcxdNDZ30HjoKN4s2NB3t1Ne3MOaBRxl7/3Ac9eUUNboxfvIUhoV0sj+9/HKd
      mmoyqux58i+TGRuu4WBGK71HjLr5ADDqOlgzbwYzZsxgb2YFzZX5pGSXAWBoLGHfsXzGPvEY
      exctIOaFdyhI/IFidTtwWePJ0kHBT18vJW7COKz12qsdoPDvQx/nWs5dqGDnrlwmThyCOvc0
      OefPsWDORsa+PYNgpRajvpof5qxh4F/ew790I+uzKlm54DtCH3yJyOb9LDlS9q871aThYmY1
      +9Z8w/PPv8aZX6RpEehU55FQqGdgtBclmQdQRt2PuxRQehETbmDBl7PYkXgedbUaI4DZAq+I
      CJJWzyRZY0+IuxIwU5i6n9R6kAs6BKAgZR/J1WJsRPrrnk2g+PQBTlUbkWPA1debS/GrWJeu
      Z1C4EzqlDGc7OQonV2y1ev4wTC0c2b2PDmsZ5k4TIZ4OrFrwPbW2YQS6hhPgWMRX87/nRGIu
      ak17dyERlVoLVu7Pp0dUENUFueTmxfPBa39lzqYkGutLyD++nY9ef5HZG5LRX9fxbRU57DmV
      j421NcjdmPzCFNy7XfaWNs489tQz+DneTpIEgcwTRwkeOIpfJPIWSfEPc2P7ws8psQ7AW9HG
      hfRKtv00i2eff5MCIYAerpXMn/0N+09eQl3fzaJz9GVoYD1zZnzNvuQCimrVgPHmA0AiVTDt
      3dnMnj2bR/r6/ub/jn6huDuoUHgG4mGvQioTXQ1vbc/fx66Gnqyf9zI7//kOn609eF1DlAyM
      68Hxg3vJEfsyzPPy7Gxsb6NabE+Am4LoPr2R65rIuXSJld9+TkKZCZG+iuZGC3w9PPEP8KC8
      Wv2vB4DYidcWr2HhV5/z9lhbdqcWXu3cjpo8Zv1zJY+9+SGh1mqWbU6lrTadosIKTp9v4qE3
      vuQff/8LfQJUuPt6XjaXtdWycWcFf1vwHdPH2LP1aBZgQeg9E5jz1+Fs3JaCDggbOonPXh7J
      vi3HMV6dvMQEDXiU2a+OZvvOBPYdSWbi21/x9esj2PDTQWjT09Suo7NRTYv0DuTSk9jxwF/e
      YEJEPXuPJpB0yZlPv57PSM9q9mZreHvOD7z27ESCwhzxcOqmDDefp+aSNV++NZHDB/fiMHw6
      +1Z/x7wvXqHmWBJNUiciR03iq7lv03DoAOrrSL8q3z58+M4rNCYlUXkHXNqGmkzWJVygqjCD
      isJCThfUYwZ06mJ25Zr5cv63PBmqZl96Fx+sXM93s2fy+j0mtqW18Pyn3/Luq88Q6afE093l
      an88+e4/mfH6FKI8HQjxcgdt9R+mnd8w6F1i74ak/ijV7VGoRO1oqjR0mEEpBhAR1KcvBUve
      IGTC11hdIWrauzHYM42t2w7RcCwNu8cnMfaeKLoiRyIpPY2/WyhWkXYcid+J+UIZ/R/z/9dx
      rLom9qzfijIsnPzUFvq95IW6qhBLqZIlMz7GYsCziBsuUakM4bkXn6NZa2C/SomzvZjjW5aj
      UQVyOsXIk1/70lhTgUgmJy5CwuHdhxGfraTH6HEcXb+IGkUIutxMhg6bzvEN89EowtDnZxAz
      /EVaqisQO9iR+/MaSq1CMF1IZ9CQ5/EqKSPt+EHUnTkE932CPnZaNh09QEPnJYY89sQfeycd
      Ffy4dDcePfxIK5Dz8KN9aTp2hMRD+7lUaqT/MDkbVv6Ap7cn+RoXXg1yoqqgDAd/H9w8tBw6
      kYyHTxD1GXvYX2qPtykfZY9wBg9Q8uPOYyS06BGHRWFtbKCqxgJR5WE25VoSJClF2iMKtzuQ
      DcfCLoi/vvgkmrpylCpbnFVSaioKsbVxJNK2gwMHjlGV30VsnJFtazbgEhFERpaJ4WOU7F3z
      E7j4cLLAlr8870FtRRlKJxuOr9mEztOXYwVypr/khFadeTMzaBclZ7KQBffjiqplu7qEkiZL
      xC1qnINcKK8zER3oxNncIqJjormYk4pPSAy2MsvL9OLzKZwp0hAc3Rurzg48QkOuHoSFrg4y
      T6fjENKXAGc56qI82mSeeMrbOZ6UgczeHs+QGNwsGklOycJkF8DIgVGY2mpJSclAcAhmSFwY
      vyMB1g2B5qqLnEzPQ+UbzcCegaQdXIZl4Dj0JSep6175Q+NGEuVrjyAIZJ1JJSKyL0ZNCUlp
      53EIjqFfmCfph3Zh8u1PjDscP56G2CWEQTFhmFurSE7OwmQfyPABPejSVJCalo3Z1p8hA6PI
      27Wdzt6D6G1nIvlUBl22/gwbEIm4s4nTKSm0StwYNiQOmbmdrJQUmi09uKd/j6sTwr8HgdqC
      M6TnVeIeHktsiAdNlfmkZhbgGNyb2HBPGovPknqukuDYQYR5yIhftJ7g15/HqjiPnKIm+g/o
      i6O1gbTjiaiNKvoN6oeLXExJbhpnKw0MGDIYSW0OhwtMTBwdzemkROoMSvoO7Idrd0Ku7DMp
      BIXHoZRKwGzkfPpZPGJ6Yi+5dW+6UddOen4BA3r3Zt+2Hwgf8hyuoiqOn8pBFdCL/pG+NJef
      JyW7CIeAXgyM8qWp4jwp2SV49ehLr0BXErasx3vog7gbaziZfgmPyL70DnSlq63+z+cHUJcV
      YO0RjO1tWlbVNaVY2Xhhp7y9RbOuuhyZrRsqxX8zRfBNIHRRXFiNT7DvbW0JOloaaNFZ4OFq
      /x97tOtRXVKAnXcwtxs8WFlejKOrL7LfobH8P0LHDHDM8/qDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Success Rate of top 5 Countries' width='192'>
      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
      41D8L/EbqTKm1+1wAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='167' name='Success rate by Catagory' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 Category with highest pledge' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAATS0lEQVR4nO3daZAcZ33H8W9P98zszN6HrpVkySvrtC0qFrJlW5jCF8YESDhMEYwgVJEU
      oYrkXVJ5lSoSUkVRqUoVFEUVlcQkAQIOBEIMjmXJNrLBwcaW5F1p73t3jr137j6evFivLK20
      2muO7u3/591ou3se7favn38//XS3ppRSCOFTgUo3QIhKkgAIXzOu/jAyMkKhUKhUW4Qou2sC
      UCgUaGtrq1RbhCg7KYGEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kA
      hK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISv
      SQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kA
      hK9JAISvSQBExaSnE3R0XGYmk19hSYd4PFGSNkgAREVkk5184zv/wehwL//0Lz8gazk3WbrA
      mTMvlKQdxsqLCFF8Hb86y/77P8Qj9+3hvlSa2Z6X+fsfvkC4cS/v3ZnkZx0W2XiCfbuiNN7+
      ILGhYV5/7ns8+8Ywu/cdIz38KpNzDp/68l/T1qCvux3SA4iKCIaCmKYJQDw+yqvP/Q+Pfvav
      iMz1MZ7Nce8HT1HVqPGZT36AqfgQqblpXnuli1Nf+kue/MhJWupr0auiZLPZDbVDegBREYdO
      Psz/fut7/HPvVqYKYR5/9wl+8INvUFD13BEskA1o164QMDhweCs/fOrbbNm6CwOdWjvB5bFZ
      bt9Rs+52aEoptfihr6+Ptra2dW9MiLUwCzmyuQJV0WqCukYmnUIPRTA0BxUIYpsFQiED03JQ
      jkMoaJBOZwhHqsHOkzMdamqqCWjayl+2DOkBRFEoBUopHAccW6EAbBsNh0BAQwsECAR1tKt2
      1mCoimCo6srn6pq6a7YZ1Bd+Fg6982+1dW8vE4xy1arrJgEQa+Y4imzGIZOxyaYd8jmHXN7B
      NhWOo3AUoECbiqFPjqFpGlpAQw8aBKvDhGsjhOoiRJtqibbUYkRC1wSjnCQA4qaUUtgWZLM2
      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
      6OmMYZkbe+5/MdXUVnHnXXu46+42mrfUbuiIv5ScBAsAdCPAvgPbuXXfVqan0lx8Y5Dzrw8w
      N5PBccpfHhlGgO07G7nrnjb2H2rdcKmzHOkBxLIsy2Z4YJLernF6O2NMJucxS9gzRKvDbNlW
      x/7DrRw80lr0o/2NSADEqpgFi6nJFLGxGUYGJ4iNzpCIzVIorP8G+tq6Klq21rFjVxO797aw
      bUc99fVRAusc0VkPCYBYM6UUjq2wLJvUfI6Z6TTTU2nmptNksyb5XAHbcnAchW4EMAydqmiI
      aDREbV2ExuYaGpuqiVSH0fUAgYBW8iP9cuQcQKyZpmnohoZuBAhXBWneUrviOko5jA900jMy
      xs4t76a+rjTPNVormQskymK84wX+/Re/o646wDe//k3SLhltlR5AlMUrzzzHw5/9W3arMZ48
      tZ30wOt860enGRjNcur3d/HUmRjO5DCH7tjNtHOQk60TvDY0T13rIeri5xnKBjj58T/lgYPr
      f3/YjUgPIMqipi7CfCrLxPgA3/2Hv+HCcA7NiEJ6knTB4fijH+W+o9t57FOfwhnu5pWzv0Uz
      IsRi4+w9chDD0MnPFv8NNdIDiLK4/w8+yT9991voVQb6tqNEMkPEZnMYwQKmpWHoOlpARwP0
      UDX33n2M10ey7Nixh6nYGAHdIpGYKXq7ZBRI+JqUQMLXJADC1yQAwtckAMLXJADC1yQAwtck
      AMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC
      1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtck
      AMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLX/h99gAKUO2A66gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yearwise Pledge' width='192'>
      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
      S8InAYsr4wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='success and failure by year wise' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
